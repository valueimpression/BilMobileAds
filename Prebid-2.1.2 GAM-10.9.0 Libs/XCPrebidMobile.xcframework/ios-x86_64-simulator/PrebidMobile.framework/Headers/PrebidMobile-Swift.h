#if 0
#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.8.1 (swiftlang-5.8.0.124.5 clang-1403.0.22.11.100)
#ifndef PREBIDMOBILE_SWIFT_H
#define PREBIDMOBILE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#import <PrebidMobile/PrebidMobile.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="PrebidMobile",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

SWIFT_CLASS_NAMED("AutoRefreshCountConfig")
@interface PBMAutoRefreshCountConfig : NSObject
/// The number of times the BannerView has been refreshed.
@property (nonatomic) NSInteger numRefreshes;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class AdFormat;
@class BannerParameters;
@class VideoParameters;
@class NSNumber;
@class PBMVideoControlsConfiguration;

/// Contains all the data needed to load an ad.
SWIFT_CLASS_NAMED("AdConfiguration")
@interface PBMAdConfiguration : PBMAutoRefreshCountConfig
@property (nonatomic) BOOL isOriginalAPI;
@property (nonatomic, copy) NSSet<AdFormat *> * _Nonnull adFormats;
/// Describes an OpenRTB banner object
@property (nonatomic, strong) BannerParameters * _Nonnull bannerParameters;
/// Describes an OpenRTB video object
@property (nonatomic, strong) VideoParameters * _Nonnull videoParameters;
/// Whether or not this ad configuration is intended to represent an intersitial ad.
/// Setting this to true will disable auto refresh.
@property (nonatomic) BOOL isInterstitialAd;
/// Whether or not this ad configuration is intended to represent an ad as an intersitial one (regardless of original designation).
/// Overrides <code>isInterstitialAd</code>
/// Setting this to true will disable auto refresh.
@property (nonatomic, strong) NSNumber * _Nullable forceInterstitialPresentation;
/// Whether or not this ad configuration is intended to represent an intersitial ad.
/// Returns the effective result by combining <code>isInterstitialAd</code> and <code>forceInterstitialPresentation</code>
@property (nonatomic, readonly) BOOL presentAsInterstitial;
/// Interstitial layout
@property (nonatomic) PBMInterstitialLayout interstitialLayout;
/// Size for the ad.
@property (nonatomic) CGSize size;
/// Sets a video interstitial ad unit as an opt-in video
@property (nonatomic) BOOL isOptIn;
/// Indicates whether the ad is built-in video e.g. 300x250.
@property (nonatomic) BOOL isBuiltInVideo;
/// This property indicated winning bid ad format (ext.prebid.type)
@property (nonatomic, strong) AdFormat * _Nullable winningBidAdFormat;
/// This property represents video controls custom configuration.
@property (nonatomic, strong) PBMVideoControlsConfiguration * _Nonnull videoControlsConfig;
@property (nonatomic) NSTimeInterval pollFrequency;
@property (nonatomic) NSInteger viewableArea;
@property (nonatomic) NSInteger viewableDuration;
@property (nonatomic, copy) void (^ _Nullable clickHandlerOverride)(SWIFT_NOESCAPE void (^ _Nonnull)(void));
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSString;

SWIFT_CLASS("_TtC12PrebidMobile8AdFormat")
@interface AdFormat : NSObject
@property (nonatomic, readonly) NSInteger rawValue;
@property (nonatomic, readonly, copy) NSString * _Nullable stringEquivalent;
- (nonnull instancetype)initWithRawValue:(NSInteger)rawValue stringEquivalent:(NSString * _Nonnull)stringEquivalent;
- (nonnull instancetype)initWithRawValue:(NSInteger)rawValue OBJC_DESIGNATED_INITIALIZER;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AdFormat * _Nonnull banner;)
+ (AdFormat * _Nonnull)banner SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AdFormat * _Nonnull video;)
+ (AdFormat * _Nonnull)video SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AdFormat * _Nonnull native;)
+ (AdFormat * _Nonnull)native SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AdFormat * _Nonnull display SWIFT_DEPRECATED_MSG("Display ad format is deprecated. Please, use banner ad format instead.");)
+ (AdFormat * _Nonnull)display SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<AdFormat *> * _Nonnull allCases;)
+ (NSArray<AdFormat *> * _Nonnull)allCases SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AdUnitConfig;
@class PBMAdLoadFlowController;

SWIFT_PROTOCOL("_TtP12PrebidMobile28AdLoadFlowControllerDelegate_")
@protocol AdLoadFlowControllerDelegate <NSObject>
@property (nonatomic, readonly, strong) AdUnitConfig * _Nonnull adUnitConfig;
- (void)adLoadFlowController:(PBMAdLoadFlowController * _Nonnull)adLoadFlowController failedWithError:(NSError * _Nullable)error;
- (void)adLoadFlowControllerWillSendBidRequest:(PBMAdLoadFlowController * _Nonnull)adLoadFlowController;
- (void)adLoadFlowControllerWillRequestPrimaryAd:(PBMAdLoadFlowController * _Nonnull)adLoadFlowController;
- (BOOL)adLoadFlowControllerShouldContinue:(PBMAdLoadFlowController * _Nonnull)adLoadFlowController SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, PBMAdPosition, "AdPosition", open) {
  PBMAdPositionUndefined = 0,
  PBMAdPositionHeader = 4,
  PBMAdPositionFooter = 5,
  PBMAdPositionSidebar = 6,
  PBMAdPositionFullScreen = 7,
};

enum ResultCode : NSInteger;
@class PBMORTBAppContent;
@class PBMORTBContentData;

SWIFT_CLASS("_TtC12PrebidMobile6AdUnit")
@interface AdUnit : NSObject
@property (nonatomic, copy) NSString * _Nullable pbAdSlot;
- (void)fetchDemandWithCompletion:(void (^ _Nonnull)(enum ResultCode, NSDictionary<NSString *, NSString *> * _Nullable))completion;
- (void)fetchDemandWithAdObject:(id _Nonnull)adObject completion:(void (^ _Nonnull)(enum ResultCode))completion;
/// This method obtains the context data keyword & value for adunit context targeting
/// if the key already exists the value will be appended to the list. No duplicates will be added
- (void)addContextDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addExtData method instead.");
/// This method obtains the context data keyword & values for adunit context targeting
/// the values if the key already exist will be replaced with the new set of values
- (void)updateContextDataWithKey:(NSString * _Nonnull)key value:(NSSet<NSString *> * _Nonnull)value SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use updateExtData method instead.");
/// This method allows to remove specific context data keyword & values set from adunit context targeting
- (void)removeContextDataForKey:(NSString * _Nonnull)forKey SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use removeExtData method instead.");
/// This method allows to remove all context data set from adunit context targeting
- (void)clearContextData SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use clearExtData method instead.");
/// This method obtains the ext data keyword & value for adunit targeting
/// if the key already exists the value will be appended to the list. No duplicates will be added
- (void)addExtDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
/// This method obtains the ext data keyword & values for adunit targeting
/// the values if the key already exist will be replaced with the new set of values
- (void)updateExtDataWithKey:(NSString * _Nonnull)key value:(NSSet<NSString *> * _Nonnull)value;
/// This method allows to remove specific ext data keyword & values set from adunit targeting
- (void)removeExtDataForKey:(NSString * _Nonnull)forKey;
/// This method allows to remove all ext data set from adunit targeting
- (void)clearExtData;
/// This method obtains the context keyword for adunit context targeting
/// Inserts the given element in the set if it is not already present.
- (void)addContextKeyword:(NSString * _Nonnull)newElement SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addExtKeyword method instead.");
/// This method obtains the context keyword set for adunit context targeting
/// Adds the elements of the given set to the set.
- (void)addContextKeywords:(NSSet<NSString *> * _Nonnull)newElements SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addExtKeywords method instead.");
/// This method allows to remove specific context keyword from adunit context targeting
- (void)removeContextKeyword:(NSString * _Nonnull)element SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use removeExtKeyword method instead.");
/// This method allows to remove all keywords from the set of adunit context targeting
- (void)clearContextKeywords SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use clearExtKeywords method instead.");
/// This method obtains the keyword for adunit targeting
/// Inserts the given element in the set if it is not already present.
- (void)addExtKeyword:(NSString * _Nonnull)newElement;
/// This method obtains the keyword set for adunit targeting
/// Adds the elements of the given set to the set.
- (void)addExtKeywords:(NSSet<NSString *> * _Nonnull)newElements;
/// This method allows to remove specific keyword from adunit targeting
- (void)removeExtKeyword:(NSString * _Nonnull)element;
/// This method allows to remove all keywords from the set of adunit targeting
- (void)clearExtKeywords;
- (void)setAppContent:(PBMORTBAppContent * _Nonnull)appContentObject;
- (PBMORTBAppContent * _Nullable)getAppContent SWIFT_WARN_UNUSED_RESULT;
- (void)clearAppContent;
- (void)addAppContentData:(NSArray<PBMORTBContentData *> * _Nonnull)dataObjects;
- (void)removeAppContentData:(PBMORTBContentData * _Nonnull)dataObject;
- (void)clearAppContentData;
- (NSArray<PBMORTBContentData *> * _Nullable)getUserData SWIFT_WARN_UNUSED_RESULT;
- (void)addUserData:(NSArray<PBMORTBContentData *> * _Nonnull)userDataObjects;
- (void)removeUserData:(PBMORTBContentData * _Nonnull)userDataObject;
- (void)clearUserData;
/// This method allows to set the auto refresh period for the demand
/// \param time refresh time interval
///
- (void)setAutoRefreshMillisWithTime:(double)time;
/// This method stops the auto refresh of demand
- (void)stopAutoRefresh;
- (void)resumeAutoRefresh;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSValue;
@class PBMNativeAdConfiguration;

SWIFT_CLASS("_TtC12PrebidMobile12AdUnitConfig")
@interface AdUnitConfig : NSObject <NSCopying>
@property (nonatomic, copy) NSString * _Nonnull configId;
@property (nonatomic, readonly, strong) PBMAdConfiguration * _Nonnull adConfiguration;
@property (nonatomic, copy) NSSet<AdFormat *> * _Nonnull adFormats;
@property (nonatomic) CGSize adSize;
@property (nonatomic, strong) NSValue * _Nullable minSizePerc;
@property (nonatomic) enum PBMAdPosition adPosition;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSArray<NSString *> *> * _Nonnull extDataDictionary;
@property (nonatomic, strong) PBMNativeAdConfiguration * _Nullable nativeAdConfiguration;
@property (nonatomic, copy) NSArray<NSValue *> * _Nullable additionalSizes;
@property (nonatomic) NSTimeInterval refreshInterval;
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId;
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId size:(CGSize)size OBJC_DESIGNATED_INITIALIZER;
- (void)addContextDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addExtData method instead.");
- (void)updateContextDataWithKey:(NSString * _Nonnull)key value:(NSSet<NSString *> * _Nonnull)value SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use updateExtData method instead.");
- (void)removeContextDataFor:(NSString * _Nonnull)key SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use removeExtData method instead.");
- (void)clearContextData SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use clearExtData method instead.");
- (NSDictionary<NSString *, NSArray<NSString *> *> * _Nonnull)getContextData SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use getExtData method instead.");
- (void)addExtDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (void)updateExtDataWithKey:(NSString * _Nonnull)key value:(NSSet<NSString *> * _Nonnull)value;
- (void)removeExtDataFor:(NSString * _Nonnull)key;
- (void)clearExtData;
- (NSDictionary<NSString *, NSArray<NSString *> *> * _Nonnull)getExtData SWIFT_WARN_UNUSED_RESULT;
- (void)addContextKeyword:(NSString * _Nonnull)newElement SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addExtKeyword method instead.");
- (void)addContextKeywords:(NSSet<NSString *> * _Nonnull)newElements SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addExtKeywords method instead.");
- (void)removeContextKeyword:(NSString * _Nonnull)element SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use removeExtKeyword method instead.");
- (void)clearContextKeywords SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use clearExtKeywords method instead.");
- (NSSet<NSString *> * _Nonnull)getContextKeywords SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use getExtKeywords method instead.");
- (void)addExtKeyword:(NSString * _Nonnull)newElement;
- (void)addExtKeywords:(NSSet<NSString *> * _Nonnull)newElements;
- (void)removeExtKeyword:(NSString * _Nonnull)element;
- (void)clearExtKeywords;
- (NSSet<NSString *> * _Nonnull)getExtKeywords SWIFT_WARN_UNUSED_RESULT;
- (void)setAppContent:(PBMORTBAppContent * _Nonnull)appContent;
- (PBMORTBAppContent * _Nullable)getAppContent SWIFT_WARN_UNUSED_RESULT;
- (void)clearAppContent;
- (void)addAppContentData:(NSArray<PBMORTBContentData *> * _Nonnull)dataObjects;
- (void)removeAppContentData:(PBMORTBContentData * _Nonnull)dataObject;
- (void)clearAppContentData;
- (NSArray<PBMORTBContentData *> * _Nullable)getUserData SWIFT_WARN_UNUSED_RESULT;
- (void)addUserData:(NSArray<PBMORTBContentData *> * _Nonnull)userDataObjects;
- (void)removeUserData:(PBMORTBContentData * _Nonnull)userDataObject;
- (void)clearUserData;
- (void)setPbAdSlot:(NSString * _Nullable)newElement;
- (NSString * _Nullable)getPbAdSlot SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIButton;
enum PBMPosition : NSInteger;
@class UIImage;
@class UIView;

SWIFT_CLASS_NAMED("AdViewButtonDecorator")
@interface PBMAdViewButtonDecorator : NSObject
@property (nonatomic, strong) UIButton * _Nonnull button;
@property (nonatomic) enum PBMPosition buttonPosition;
@property (nonatomic) CGRect customButtonPosition;
@property (nonatomic) double buttonArea;
@property (nonatomic) BOOL isMRAID;
@property (nonatomic, copy) PBMVoidBlock _Nullable buttonTouchUpInsideBlock;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)setImage:(UIImage * _Nonnull)image;
- (void)addButtonTo:(UIView * _Nonnull)view displayView:(UIView * _Nonnull)displayView;
- (void)removeButtonFromSuperview;
- (void)bringButtonToFront;
- (void)sendSubviewToBack;
- (void)updateButtonConstraints;
- (CGFloat)getButtonConstraintConstant SWIFT_WARN_UNUSED_RESULT;
- (CGSize)getButtonSize SWIFT_WARN_UNUSED_RESULT;
- (void)buttonTappedAction;
@end


SWIFT_CLASS("_TtC12PrebidMobile11AdViewUtils")
@interface AdViewUtils : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (void)findPrebidCreativeSize:(UIView * _Nonnull)adView success:(void (^ _Nonnull)(CGSize))success failure:(void (^ _Nonnull)(NSError * _Nonnull))failure;
@end


SWIFT_CLASS_NAMED("AgeUtils")
@interface PBMAgeUtils : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@protocol BannerEventHandler;
@class PBMBannerAdLoader;
@class PBMDisplayView;

SWIFT_PROTOCOL("_TtP12PrebidMobile22BannerAdLoaderDelegate_")
@protocol BannerAdLoaderDelegate <NSObject>
@property (nonatomic, readonly, strong) id <BannerEventHandler> _Nullable eventHandler;
- (void)bannerAdLoader:(PBMBannerAdLoader * _Nonnull)bannerAdLoader loadedAdView:(UIView * _Nonnull)adView adSize:(CGSize)adSize;
- (void)bannerAdLoader:(PBMBannerAdLoader * _Nonnull)bannerAdLoader createdDisplayView:(PBMDisplayView * _Nonnull)displayView;
@end


SWIFT_PROTOCOL_NAMED("VideoBasedAdUnitProtocol")
@protocol PBMVideoBasedAdUnitProtocol
@property (nonatomic, strong) VideoParameters * _Nonnull videoParameters;
@end


SWIFT_PROTOCOL_NAMED("BannerBasedAdUnitProtocol")
@protocol PBMBannerBasedAdUnitProtocol
@property (nonatomic, strong) BannerParameters * _Nonnull bannerParameters;
@end


SWIFT_CLASS("_TtC12PrebidMobile12BannerAdUnit")
@interface BannerAdUnit : AdUnit <PBMBannerBasedAdUnitProtocol, PBMVideoBasedAdUnitProtocol>
@property (nonatomic, strong) BannerParameters * _Nonnull parameters SWIFT_DEPRECATED_MSG("This property is deprecated. Please, use bannerParameters instead.");
@property (nonatomic, strong) BannerParameters * _Nonnull bannerParameters;
@property (nonatomic, strong) VideoParameters * _Nonnull videoParameters;
@property (nonatomic, copy) NSSet<AdFormat *> * _Nonnull adFormats;
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId size:(CGSize)size OBJC_DESIGNATED_INITIALIZER;
- (void)addAdditionalSizeWithSizes:(NSArray<NSValue *> * _Nonnull)sizes;
@end


@protocol BannerEventLoadingDelegate;
@protocol BannerEventInteractionDelegate;

SWIFT_PROTOCOL("_TtP12PrebidMobile18BannerEventHandler_")
@protocol BannerEventHandler <PBMPrimaryAdRequesterProtocol>
/// Delegate for custom event handler to inform the PBM SDK about the events related to the ad server communication.
@property (nonatomic, weak) id <BannerEventLoadingDelegate> _Nullable loadingDelegate;
/// Delegate for custom event handler to inform the PBM SDK about the events related to the user’s interaction with the ad.
@property (nonatomic, weak) id <BannerEventInteractionDelegate> _Nullable interactionDelegate;
/// The array of the CGRect entries for each valid ad sizes.
/// The first size is treated as a frame for related ad unit.
@property (nonatomic, readonly, copy) NSArray<NSValue *> * _Nonnull adSizes;
- (void)trackImpression;
@end

@class BidResponse;

SWIFT_CLASS("_TtC12PrebidMobile28BannerEventHandlerStandalone")
@interface BannerEventHandlerStandalone : NSObject <BannerEventHandler>
@property (nonatomic, weak) id <BannerEventLoadingDelegate> _Nullable loadingDelegate;
@property (nonatomic, weak) id <BannerEventInteractionDelegate> _Nullable interactionDelegate;
@property (nonatomic, copy) NSArray<NSValue *> * _Nonnull adSizes;
- (void)requestAdWithBidResponse:(BidResponse * _Nullable)bidResponse;
- (void)trackImpression;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIViewController;

SWIFT_PROTOCOL("_TtP12PrebidMobile30BannerEventInteractionDelegate_")
@protocol BannerEventInteractionDelegate <NSObject>
- (void)willPresentModal;
- (void)didDismissModal;
- (void)willLeaveApp;
@property (nonatomic, readonly, strong) UIViewController * _Nullable viewControllerForPresentingModal;
@end


SWIFT_PROTOCOL("_TtP12PrebidMobile26BannerEventLoadingDelegate_")
@protocol BannerEventLoadingDelegate <NSObject>
- (void)prebidDidWin;
- (void)adServerDidWin:(UIView * _Nonnull)view adSize:(CGSize)adSize;
- (void)failedWithError:(NSError * _Nullable)error;
@end

@class PBApi;

/// Describes an <a href="https://www.iab.com/wp-content/uploads/2016/03/OpenRTB-API-Specification-Version-2-5-FINAL.pdf">OpenRTB</a> banner object
SWIFT_CLASS("_TtC12PrebidMobile16BannerParameters")
@interface BannerParameters : NSObject
/// List of supported API frameworks for this impression. If an API is not explicitly listed, it is assumed not to be supported.
@property (nonatomic, copy) NSArray<PBApi *> * _Nullable api;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable rawAPI;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP12PrebidMobile30DisplayViewInteractionDelegate_")
@protocol DisplayViewInteractionDelegate <NSObject>
- (void)trackImpressionForDisplayView:(PBMDisplayView * _Nonnull)forDisplayView;
- (UIViewController * _Nullable)viewControllerForModalPresentationFromDisplayView:(PBMDisplayView * _Nonnull)fromDisplayView SWIFT_WARN_UNUSED_RESULT;
- (void)didLeaveAppFrom:(PBMDisplayView * _Nonnull)displayView;
- (void)willPresentModalFrom:(PBMDisplayView * _Nonnull)displayView;
- (void)didDismissModalFrom:(PBMDisplayView * _Nonnull)displayView;
@end

@protocol BannerViewDelegate;
@class NSCoder;

SWIFT_CLASS("_TtC12PrebidMobile10BannerView")
@interface BannerView : UIView <AdLoadFlowControllerDelegate, BannerAdLoaderDelegate, BannerEventInteractionDelegate, DisplayViewInteractionDelegate>
@property (nonatomic, readonly, strong) AdUnitConfig * _Nonnull adUnitConfig;
@property (nonatomic, readonly, strong) id <BannerEventHandler> _Nullable eventHandler;
@property (nonatomic, readonly, strong) BannerParameters * _Nonnull bannerParameters;
@property (nonatomic, readonly, strong) VideoParameters * _Nonnull videoParameters;
@property (nonatomic, readonly, copy) NSString * _Nonnull configID;
@property (nonatomic) NSTimeInterval refreshInterval;
@property (nonatomic, copy) NSArray<NSValue *> * _Nullable additionalSizes;
@property (nonatomic, strong) AdFormat * _Nonnull adFormat;
@property (nonatomic) enum PBMAdPosition adPosition;
@property (nonatomic, weak) id <BannerViewDelegate> _Nullable delegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame configID:(NSString * _Nonnull)configID adSize:(CGSize)adSize eventHandler:(id <BannerEventHandler> _Nonnull)eventHandler OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithConfigID:(NSString * _Nonnull)configID eventHandler:(id <BannerEventHandler> _Nonnull)eventHandler;
- (nonnull instancetype)initWithFrame:(CGRect)frame configID:(NSString * _Nonnull)configID adSize:(CGSize)adSize;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)loadAd;
- (void)setStoredAuctionResponseWithStoredAuction:(NSString * _Nonnull)storedAuction;
- (void)stopRefresh;
- (void)addContextData:(NSString * _Nonnull)data forKey:(NSString * _Nonnull)key SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addExtData method instead.");
- (void)updateContextData:(NSSet<NSString *> * _Nonnull)data forKey:(NSString * _Nonnull)key SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use updateExtData method instead.");
- (void)removeContextDateForKey:(NSString * _Nonnull)key SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use removeExtData method instead.");
- (void)clearContextData SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use clearExtData method instead.");
- (void)addExtDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (void)updateExtDataWithKey:(NSString * _Nonnull)key value:(NSSet<NSString *> * _Nonnull)value;
- (void)removeExtDataForKey:(NSString * _Nonnull)forKey;
- (void)clearExtData;
- (void)addContextKeyword:(NSString * _Nonnull)newElement SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addExtKeyword method instead.");
- (void)addContextKeywords:(NSSet<NSString *> * _Nonnull)newElements SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addExtKeywords method instead.");
- (void)removeContextKeyword:(NSString * _Nonnull)element SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use removeExtKeyword method instead.");
- (void)clearContextKeywords SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use clearExtKeywords method instead.");
- (void)addExtKeyword:(NSString * _Nonnull)newElement;
- (void)addExtKeywords:(NSSet<NSString *> * _Nonnull)newElements;
- (void)removeExtKeyword:(NSString * _Nonnull)element;
- (void)clearExtKeywords;
- (void)setAppContent:(PBMORTBAppContent * _Nonnull)appContent;
- (void)clearAppContent;
- (void)addAppContentData:(NSArray<PBMORTBContentData *> * _Nonnull)dataObjects;
- (void)removeAppContentDataObject:(PBMORTBContentData * _Nonnull)dataObject;
- (void)clearAppContentDataObjects;
- (void)addUserData:(NSArray<PBMORTBContentData *> * _Nonnull)userDataObjects;
- (void)removeUserData:(PBMORTBContentData * _Nonnull)userDataObject;
- (void)clearUserData;
- (void)trackImpressionForDisplayView:(PBMDisplayView * _Nonnull)forDisplayView;
- (UIViewController * _Nullable)viewControllerForModalPresentationFromDisplayView:(PBMDisplayView * _Nonnull)fromDisplayView SWIFT_WARN_UNUSED_RESULT;
- (void)didLeaveAppFrom:(PBMDisplayView * _Nonnull)displayView;
- (void)willPresentModalFrom:(PBMDisplayView * _Nonnull)displayView;
- (void)didDismissModalFrom:(PBMDisplayView * _Nonnull)displayView;
- (void)bannerAdLoader:(PBMBannerAdLoader * _Nonnull)bannerAdLoader loadedAdView:(UIView * _Nonnull)adView adSize:(CGSize)adSize;
- (void)bannerAdLoader:(PBMBannerAdLoader * _Nonnull)bannerAdLoader createdDisplayView:(PBMDisplayView * _Nonnull)displayView;
- (void)adLoadFlowController:(PBMAdLoadFlowController * _Nonnull)adLoadFlowController failedWithError:(NSError * _Nullable)error;
- (void)adLoadFlowControllerWillSendBidRequest:(PBMAdLoadFlowController * _Nonnull)adLoadFlowController;
- (void)adLoadFlowControllerWillRequestPrimaryAd:(PBMAdLoadFlowController * _Nonnull)adLoadFlowController;
- (BOOL)adLoadFlowControllerShouldContinue:(PBMAdLoadFlowController * _Nonnull)adLoadFlowController SWIFT_WARN_UNUSED_RESULT;
- (void)willPresentModal;
- (void)didDismissModal;
- (void)willLeaveApp;
@property (nonatomic, readonly, strong) UIViewController * _Nullable viewControllerForPresentingModal;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL("_TtP12PrebidMobile18BannerViewDelegate_")
@protocol BannerViewDelegate <NSObject>
- (UIViewController * _Nullable)bannerViewPresentationController SWIFT_WARN_UNUSED_RESULT;
@optional
- (void)bannerView:(BannerView * _Nonnull)bannerView didReceiveAdWithAdSize:(CGSize)adSize;
- (void)bannerView:(BannerView * _Nonnull)bannerView didFailToReceiveAdWith:(NSError * _Nonnull)error;
- (void)bannerViewWillLeaveApplication:(BannerView * _Nonnull)bannerView;
- (void)bannerViewWillPresentModal:(BannerView * _Nonnull)bannerView;
- (void)bannerViewDidDismissModal:(BannerView * _Nonnull)bannerView;
@end

@class InterstitialController;

SWIFT_PROTOCOL("_TtP12PrebidMobile30BaseInterstitialAdUnitProtocol_")
@protocol BaseInterstitialAdUnitProtocol <NSObject>
- (void)interstitialControllerDidCloseAd:(InterstitialController * _Nonnull)interstitialController;
- (void)callDelegate_didReceiveAd;
- (void)callDelegate_didFailToReceiveAdWith:(NSError * _Nullable)error;
- (void)callDelegate_willPresentAd;
- (void)callDelegate_didDismissAd;
- (void)callDelegate_willLeaveApplication;
- (void)callDelegate_didClickAd;
- (BOOL)callEventHandler_isReady SWIFT_WARN_UNUSED_RESULT;
- (void)callEventHandler_setLoadingDelegate:(NSObject * _Nullable)loadingDelegate;
- (void)callEventHandler_setInteractionDelegate;
- (void)callEventHandler_requestAdWith:(BidResponse * _Nullable)bidResponse;
- (void)callEventHandler_showFrom:(UIViewController * _Nullable)controller;
- (void)callEventHandler_trackImpression;
@end


SWIFT_PROTOCOL("_TtP12PrebidMobile36InterstitialEventInteractionDelegate_")
@protocol InterstitialEventInteractionDelegate <NSObject>
- (void)willPresentAd;
- (void)didDismissAd;
- (void)willLeaveApp;
- (void)didClickAd;
@end


SWIFT_PROTOCOL("_TtP12PrebidMobile41InterstitialControllerInteractionDelegate_")
@protocol InterstitialControllerInteractionDelegate <NSObject>
- (void)trackImpressionForInterstitialController:(InterstitialController * _Nonnull)forInterstitialController;
- (void)interstitialControllerDidClickAd:(InterstitialController * _Nonnull)interstitialController;
- (void)interstitialControllerDidCloseAd:(InterstitialController * _Nonnull)interstitialController;
- (void)interstitialControllerDidLeaveApp:(InterstitialController * _Nonnull)interstitialController;
- (void)interstitialControllerDidDisplay:(InterstitialController * _Nonnull)interstitialController;
- (void)interstitialControllerDidComplete:(InterstitialController * _Nonnull)interstitialController;
- (UIViewController * _Nullable)viewControllerForModalPresentationFromInterstitialController:(InterstitialController * _Nonnull)fromInterstitialController SWIFT_WARN_UNUSED_RESULT;
@end

@class PBMInterstitialAdLoader;

SWIFT_CLASS("_TtC12PrebidMobile22BaseInterstitialAdUnit")
@interface BaseInterstitialAdUnit : NSObject <AdLoadFlowControllerDelegate, BaseInterstitialAdUnitProtocol, InterstitialControllerInteractionDelegate, InterstitialEventInteractionDelegate, PBMInterstitialAdLoaderDelegate>
@property (nonatomic, readonly, strong) BannerParameters * _Nonnull bannerParameters;
@property (nonatomic, readonly, strong) VideoParameters * _Nonnull videoParameters;
@property (nonatomic, readonly, copy) NSString * _Nonnull configID;
@property (nonatomic, copy) NSSet<AdFormat *> * _Nonnull adFormats;
@property (nonatomic, readonly) BOOL isReady;
@property (nonatomic) BOOL isMuted;
@property (nonatomic) BOOL isSoundButtonVisible;
@property (nonatomic) double closeButtonArea;
@property (nonatomic) enum PBMPosition closeButtonPosition;
@property (nonatomic, weak) id _Nullable delegate;
@property (nonatomic, readonly, strong) AdUnitConfig * _Nonnull adUnitConfig;
- (void)loadAd;
- (void)showFrom:(UIViewController * _Nonnull)controller;
- (void)addContextData:(NSString * _Nonnull)data forKey:(NSString * _Nonnull)key SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addExtData method instead.");
- (void)updateContextData:(NSSet<NSString *> * _Nonnull)data forKey:(NSString * _Nonnull)key SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use updateExtData method instead.");
- (void)removeContextDateForKey:(NSString * _Nonnull)key SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use removeExtData method instead.");
- (void)clearContextData SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use clearExtData method instead.");
- (void)addExtDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (void)updateExtDataWithKey:(NSString * _Nonnull)key value:(NSSet<NSString *> * _Nonnull)value;
- (void)removeExtDataForKey:(NSString * _Nonnull)forKey;
- (void)clearExtData;
- (void)addContextKeyword:(NSString * _Nonnull)newElement SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addExtKeyword method instead.");
- (void)addContextKeywords:(NSSet<NSString *> * _Nonnull)newElements SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addExtKeywords method instead.");
- (void)removeContextKeyword:(NSString * _Nonnull)element SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use removeExtKeyword method instead.");
- (void)clearContextKeywords SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use clearExtKeywords method instead.");
- (void)addExtKeyword:(NSString * _Nonnull)newElement;
- (void)addExtKeywords:(NSSet<NSString *> * _Nonnull)newElements;
- (void)removeExtKeyword:(NSString * _Nonnull)element;
- (void)clearExtKeywords;
- (void)setAppContent:(PBMORTBAppContent * _Nonnull)appContent;
- (void)clearAppContent;
- (void)addAppContentData:(NSArray<PBMORTBContentData *> * _Nonnull)dataObjects;
- (void)removeAppContentDataObject:(PBMORTBContentData * _Nonnull)dataObject;
- (void)clearAppContentDataObjects;
- (void)addUserData:(NSArray<PBMORTBContentData *> * _Nonnull)userDataObjects;
- (void)removeUserData:(PBMORTBContentData * _Nonnull)userDataObject;
- (void)clearUserData;
- (void)interstitialAdLoader:(PBMInterstitialAdLoader * _Nonnull)interstitialAdLoader loadedAd:(void (^ _Nonnull)(UIViewController * _Nullable))showBlock isReadyBlock:(BOOL (^ _Nonnull)(void))isReadyBlock;
- (void)interstitialAdLoader:(PBMInterstitialAdLoader * _Nonnull)interstitialAdLoader createdInterstitialController:(InterstitialController * _Nonnull)interstitialController;
@property (nonatomic) id _Nullable eventHandler;
- (void)adLoadFlowControllerWillSendBidRequest:(PBMAdLoadFlowController * _Nonnull)adLoadFlowController;
- (void)adLoadFlowControllerWillRequestPrimaryAd:(PBMAdLoadFlowController * _Nonnull)adLoadFlowController;
- (BOOL)adLoadFlowControllerShouldContinue:(PBMAdLoadFlowController * _Nonnull)adLoadFlowController SWIFT_WARN_UNUSED_RESULT;
- (void)adLoadFlowController:(PBMAdLoadFlowController * _Nonnull)adLoadFlowController failedWithError:(NSError * _Nullable)error;
- (void)trackImpressionForInterstitialController:(InterstitialController * _Nonnull)forInterstitialController;
- (void)interstitialControllerDidClickAd:(InterstitialController * _Nonnull)interstitialController;
- (void)interstitialControllerDidCloseAd:(InterstitialController * _Nonnull)interstitialController;
- (void)interstitialControllerDidLeaveApp:(InterstitialController * _Nonnull)interstitialController;
- (void)interstitialControllerDidDisplay:(InterstitialController * _Nonnull)interstitialController;
- (void)interstitialControllerDidComplete:(InterstitialController * _Nonnull)interstitialController;
- (UIViewController * _Nullable)viewControllerForModalPresentationFromInterstitialController:(InterstitialController * _Nonnull)fromInterstitialController SWIFT_WARN_UNUSED_RESULT;
- (void)willPresentAd;
- (void)didDismissAd;
- (void)willLeaveApp;
- (void)didClickAd;
- (void)callEventHandler_requestAdWith:(BidResponse * _Nullable)bidResponse;
- (void)callEventHandler_showFrom:(UIViewController * _Nullable)controller;
- (BOOL)callEventHandler_isReady SWIFT_WARN_UNUSED_RESULT;
- (void)callDelegate_didReceiveAd;
- (void)callDelegate_didFailToReceiveAdWith:(NSError * _Nullable)with;
- (void)callDelegate_willPresentAd;
- (void)callDelegate_didDismissAd;
- (void)callDelegate_willLeaveApplication;
- (void)callDelegate_didClickAd;
- (void)callEventHandler_setLoadingDelegate:(NSObject * _Nullable)loadingDelegate;
- (void)callEventHandler_setInteractionDelegate;
- (void)callEventHandler_trackImpression;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class PBMORTBBidExtSkadn;
@class PBMORTBAdConfiguration;
@class PBMORTBExtPrebidEvents;
@class PBMORTBBidExt;

SWIFT_CLASS("_TtC12PrebidMobile3Bid")
@interface Bid : NSObject
/// Bid price expressed as CPM although the actual transaction is for a unit impression only.
/// Note that while the type indicates float, integer math is highly recommended
/// when handling currencies (e.g., BigDecimal in Java).
@property (nonatomic, readonly) float price;
/// Win notice URL called by the exchange if the bid wins (not necessarily indicative of a delivered,
/// viewed, or billable ad); optional means of serving ad markup.
/// Substitution macros (Section 4.4) may be included in both the URL and optionally returned markup.
@property (nonatomic, readonly, copy) NSString * _Nullable nurl;
/// Optional means of conveying ad markup in case the bid wins; supersedes the win notice
/// if markup is included in both.
/// Substitution macros (Section 4.4) may be included.
@property (nonatomic, readonly, copy) NSString * _Nullable adm;
/// Ad size
@property (nonatomic, readonly) CGSize size;
/// Targeting information that needs to be passed to the ad server SDK.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable targetingInfo;
/// SKAdNetwork parameters about an App Store product.
/// Used in the StoreKit
@property (nonatomic, readonly, strong) PBMORTBBidExtSkadn * _Nullable skadn;
/// Prebid ad format
@property (nonatomic, readonly, strong) AdFormat * _Nullable adFormat;
/// Prebid video ad configuration
@property (nonatomic, readonly, strong) PBMORTBAdConfiguration * _Nullable videoAdConfiguration;
/// Returns YES if this bid is intented for display.
@property (nonatomic, readonly) BOOL isWinning;
@property (nonatomic, readonly, strong) PBMORTBExtPrebidEvents * _Nullable events;
@property (nonatomic, readonly, strong) PBMORTBBid<PBMORTBBidExt *> * _Nonnull bid;
- (nonnull instancetype)initWithBid:(PBMORTBBid<PBMORTBBidExt *> * _Nonnull)bid OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12PrebidMobile11BidResponse")
@interface BidResponse : NSObject
@property (nonatomic, copy) NSString * _Nullable adUnitId;
@property (nonatomic, readonly, copy) NSArray<Bid *> * _Nullable allBids;
@property (nonatomic, readonly, strong) Bid * _Nullable winningBid;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSString *> * _Nullable targetingInfo;
@property (nonatomic, readonly, strong) NSNumber * _Nullable tmaxrequest;
- (nonnull instancetype)initWithAdUnitId:(NSString * _Nullable)adUnitId targetingInfo:(NSDictionary<NSString *, NSString *> * _Nullable)targetingInfo;
- (nonnull instancetype)initWithJsonDictionary:(JsonDictionary * _Nonnull)jsonDictionary;
- (void)setTargetingInfoWith:(NSDictionary<NSString *, NSString *> * _Nonnull)newValue;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("CacheManager")
@interface PBMCacheManager : NSObject
/// The class is created as a singleton object & used
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBMCacheManager * _Nonnull shared;)
+ (PBMCacheManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// The initializer that needs to be created only once
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, PBMClickbrowserType, "ClickbrowserType", open) {
  PBMClickbrowserTypeEmbedded = 0,
  PBMClickbrowserTypeNative = 1,
};


SWIFT_CLASS("_TtC12PrebidMobile18SingleContainerInt")
@interface SingleContainerInt : NSObject
@property (nonatomic, readonly) NSInteger value;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12PrebidMobile14ContextSubType")
@interface ContextSubType : SingleContainerInt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull General;)
+ (ContextSubType * _Nonnull)General SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull Article;)
+ (ContextSubType * _Nonnull)Article SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull Video;)
+ (ContextSubType * _Nonnull)Video SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull Audio;)
+ (ContextSubType * _Nonnull)Audio SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull Image;)
+ (ContextSubType * _Nonnull)Image SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull UserGenerated;)
+ (ContextSubType * _Nonnull)UserGenerated SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull Social;)
+ (ContextSubType * _Nonnull)Social SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull email;)
+ (ContextSubType * _Nonnull)email SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull chatIM;)
+ (ContextSubType * _Nonnull)chatIM SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull SellingProduct;)
+ (ContextSubType * _Nonnull)SellingProduct SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull AppStore;)
+ (ContextSubType * _Nonnull)AppStore SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull ReviewSite;)
+ (ContextSubType * _Nonnull)ReviewSite SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextSubType * _Nonnull Custom;)
+ (ContextSubType * _Nonnull)Custom SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile11ContextType")
@interface ContextType : SingleContainerInt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextType * _Nonnull Content;)
+ (ContextType * _Nonnull)Content SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextType * _Nonnull Social;)
+ (ContextType * _Nonnull)Social SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextType * _Nonnull Product;)
+ (ContextType * _Nonnull)Product SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextType * _Nonnull Custom;)
+ (ContextType * _Nonnull)Custom SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, DataAsset, open) {
  DataAssetSponsored = 1,
  DataAssetDescription = 2,
  DataAssetRating = 3,
  DataAssetLikes = 4,
  DataAssetDownloads = 5,
  DataAssetPrice = 6,
  DataAssetSaleprice = 7,
  DataAssetPhone = 8,
  DataAssetAddress = 9,
  DataAssetDescription2 = 10,
  DataAssetDisplayurl = 11,
  DataAssetCtatext = 12,
  DataAssetCustom = 13,
};

@class NSDate;

SWIFT_CLASS_NAMED("DateFormatService")
@interface PBMDateFormatService : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBMDateFormatService * _Nonnull shared;)
+ (PBMDateFormatService * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (NSDate * _Nullable)formatISO8601For:(NSString * _Nullable)strDate SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12PrebidMobile18DemandResponseInfo")
@interface DemandResponseInfo : NSObject
@property (nonatomic, readonly) enum ResultCode fetchDemandResult;
@property (nonatomic, readonly, strong) Bid * _Nullable bid;
- (nonnull instancetype)initWithFetchDemandResult:(enum ResultCode)fetchDemandResult bid:(Bid * _Nullable)bid configId:(NSString * _Nullable)configId winNotifierBlock:(PBMWinNotifierBlock _Nonnull)winNotifierBlock bidResponse:(BidResponse * _Nullable)bidResponse OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_PROTOCOL("_TtP12PrebidMobile26DisplayViewLoadingDelegate_")
@protocol DisplayViewLoadingDelegate <NSObject>
- (void)displayViewDidLoadAd:(PBMDisplayView * _Nonnull)displayView;
- (void)displayView:(PBMDisplayView * _Nonnull)displayView didFailWithError:(NSError * _Nonnull)error;
@end

@class PBMVideoVerificationParameters;

/// This class is a proxy container for event trackers.
/// You can add (and remove) any quantity of trackers.
/// Each tracker must correspond to PBMEventTrackerProtocol the PBMEventTracker Protocol.
/// EventManager implements PBMEventTrackerProtocol.
/// It broadcasts protocol calls to the all registered trackers.
SWIFT_CLASS_NAMED("EventManager")
@interface PBMEventManager : NSObject <PBMEventTrackerProtocol>
- (void)registerTracker:(id <PBMEventTrackerProtocol> _Nonnull)tracker;
- (void)unregisterTracker:(id <PBMEventTrackerProtocol> _Nonnull)tracker;
- (void)trackEvent:(PBMTrackingEvent)event;
- (void)trackVideoAdLoaded:(PBMVideoVerificationParameters * _Null_unspecified)parameters;
- (void)trackStartVideoWithDuration:(CGFloat)duration volume:(CGFloat)volume;
- (void)trackVolumeChanged:(CGFloat)playerVolume deviceVolume:(CGFloat)deviceVolume;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile13EventTracking")
@interface EventTracking : SingleContainerInt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventTracking * _Nonnull Image;)
+ (EventTracking * _Nonnull)Image SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventTracking * _Nonnull js;)
+ (EventTracking * _Nonnull)js SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventTracking * _Nonnull Custom;)
+ (EventTracking * _Nonnull)Custom SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile9EventType")
@interface EventType : SingleContainerInt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventType * _Nonnull Impression;)
+ (EventType * _Nonnull)Impression SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventType * _Nonnull ViewableImpression50;)
+ (EventType * _Nonnull)ViewableImpression50 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventType * _Nonnull ViewableImpression100;)
+ (EventType * _Nonnull)ViewableImpression100 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventType * _Nonnull ViewableVideoImpression50;)
+ (EventType * _Nonnull)ViewableVideoImpression50 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EventType * _Nonnull Custom;)
+ (EventType * _Nonnull)Custom SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


/// Defines the User Id Object from an External Thrid Party Source
SWIFT_CLASS("_TtC12PrebidMobile14ExternalUserId")
@interface ExternalUserId : NSObject <NSSecureCoding>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL supportsSecureCoding;)
+ (BOOL)supportsSecureCoding SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSString * _Nonnull source;
@property (nonatomic, copy) NSString * _Nonnull identifier;
@property (nonatomic, strong) NSNumber * _Nullable atype;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable ext;
/// Initialize ExternalUserId Class
/// \param source Source of the External User Id String.
///
/// \param identifier String of the External User Id.
///
/// \param atype (Optional) Int of the External User Id.
///
/// \param ext (Optional) Dictionary of the External User Id.
///
- (nonnull instancetype)initWithSource:(NSString * _Nonnull)source identifier:(NSString * _Nonnull)identifier atype:(NSNumber * _Nullable)atype ext:(NSDictionary<NSString *, id> * _Nullable)ext OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nonnull)toJSONDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, PBMGender, "Gender", open) {
  PBMGenderUnknown = 0,
  PBMGenderMale = 1,
  PBMGenderFemale = 2,
  PBMGenderOther = 3,
};

@class WKWebView;

SWIFT_CLASS_NAMED("HiddenWebViewManager")
@interface PBMHiddenWebViewManager : NSObject
- (nonnull instancetype)initWithWebView:(WKWebView * _Nonnull)webView landingPageString:(NSString * _Nonnull)landingPageString OBJC_DESIGNATED_INITIALIZER;
- (void)openHiddenWebView;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum PrebidHost : NSInteger;

SWIFT_CLASS("_TtC12PrebidMobile4Host")
@interface Host : NSObject
/// The class is created as a singleton object & used
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) Host * _Nonnull shared;)
+ (Host * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// The CustomHost property holds the URL for the custom prebid adaptor
- (BOOL)setCustomHostURL:(NSString * _Nullable)urlString error:(NSError * _Nullable * _Nullable)error;
/// This function retrieves the prebid server URL for the selected host
- (NSString * _Nullable)getHostURLWithHost:(enum PrebidHost)host error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// This function verifies if the prebid server URL is in the url format
- (BOOL)verifyUrlWithUrlString:(NSString * _Nullable)urlString SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC12PrebidMobile13IMAAdSlotSize")
@interface IMAAdSlotSize : SingleContainerInt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) IMAAdSlotSize * _Nonnull Size400x300;)
+ (IMAAdSlotSize * _Nonnull)Size400x300 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) IMAAdSlotSize * _Nonnull Size640x480;)
+ (IMAAdSlotSize * _Nonnull)Size640x480 SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) IMAAdSlotSize * _Nonnull Size320x480;)
+ (IMAAdSlotSize * _Nonnull)Size320x480 SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile8IMAUtils")
@interface IMAUtils : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) IMAUtils * _Nonnull shared;)
+ (IMAUtils * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (NSString * _Nullable)generateInstreamUriForGAMWithAdUnitID:(NSString * _Nonnull)adUnitID adSlotSizes:(NSArray<IMAAdSlotSize *> * _Nonnull)adSlotSizes customKeywords:(NSDictionary<NSString *, NSString *> * _Nullable)customKeywords error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC12PrebidMobile10ImageAsset")
@interface ImageAsset : SingleContainerInt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ImageAsset * _Nonnull Icon;)
+ (ImageAsset * _Nonnull)Icon SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ImageAsset * _Nonnull Main;)
+ (ImageAsset * _Nonnull)Main SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ContextType * _Nonnull Custom;)
+ (ContextType * _Nonnull)Custom SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile19InstreamVideoAdUnit")
@interface InstreamVideoAdUnit : AdUnit <PBMVideoBasedAdUnitProtocol>
@property (nonatomic, strong) VideoParameters * _Nonnull videoParameters;
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId size:(CGSize)size OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile18InterstitialAdUnit")
@interface InterstitialAdUnit : AdUnit <PBMBannerBasedAdUnitProtocol, PBMVideoBasedAdUnitProtocol>
@property (nonatomic, strong) BannerParameters * _Nonnull parameters SWIFT_DEPRECATED_MSG("This property is deprecated. Please, use bannerParameters instead.");
@property (nonatomic, strong) BannerParameters * _Nonnull bannerParameters;
@property (nonatomic, strong) VideoParameters * _Nonnull videoParameters;
@property (nonatomic, copy) NSSet<AdFormat *> * _Nonnull adFormats;
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId minWidthPerc:(NSInteger)minWidthPerc minHeightPerc:(NSInteger)minHeightPerc;
@end

@class InterstitialRenderingAdUnit;

SWIFT_PROTOCOL("_TtP12PrebidMobile26InterstitialAdUnitDelegate_")
@protocol InterstitialAdUnitDelegate <NSObject>
@optional
/// Called when an ad is loaded and ready for display
- (void)interstitialDidReceiveAd:(InterstitialRenderingAdUnit * _Nonnull)interstitial;
/// Called when the load process fails to produce a viable ad
- (void)interstitial:(InterstitialRenderingAdUnit * _Nonnull)interstitial didFailToReceiveAdWithError:(NSError * _Nullable)error;
/// Called when the interstitial view will be launched,  as a result of show() method.
- (void)interstitialWillPresentAd:(InterstitialRenderingAdUnit * _Nonnull)interstitial;
/// Called when the interstitial is dismissed by the user
- (void)interstitialDidDismissAd:(InterstitialRenderingAdUnit * _Nonnull)interstitial;
/// Called when an ad causes the sdk to leave the app
- (void)interstitialWillLeaveApplication:(InterstitialRenderingAdUnit * _Nonnull)interstitial;
/// Called when user clicked the ad
- (void)interstitialDidClickAd:(InterstitialRenderingAdUnit * _Nonnull)interstitial;
@end

@protocol InterstitialControllerLoadingDelegate;
@class PBMAdDetails;
@class PBMInterstitialDisplayProperties;

SWIFT_CLASS("_TtC12PrebidMobile22InterstitialController")
@interface InterstitialController : NSObject <PBMAdViewManagerDelegate>
@property (nonatomic, copy) NSSet<AdFormat *> * _Nonnull adFormats;
/// Sets a video interstitial ad unit as an opt-in video
@property (nonatomic) BOOL isOptIn;
@property (nonatomic, strong) PBMVideoControlsConfiguration * _Nonnull videoControlsConfig;
@property (nonatomic, strong) VideoParameters * _Nonnull videoParameters;
@property (nonatomic, weak) id <InterstitialControllerLoadingDelegate> _Nullable loadingDelegate;
@property (nonatomic, weak) id <InterstitialControllerInteractionDelegate> _Nullable interactionDelegate;
- (nonnull instancetype)initWithBid:(Bid * _Nonnull)bid adConfiguration:(AdUnitConfig * _Nonnull)adConfiguration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithBid:(Bid * _Nonnull)bid configId:(NSString * _Nonnull)configId;
- (void)loadAd;
- (void)show;
- (UIViewController * _Nullable)viewControllerForModalPresentation SWIFT_WARN_UNUSED_RESULT;
- (void)adLoaded:(PBMAdDetails * _Nonnull)pbmAdDetails;
- (void)failedToLoad:(NSError * _Nonnull)error;
- (void)adDidComplete;
- (void)adDidDisplay;
- (void)adWasClicked;
- (void)adViewWasClicked;
- (void)adDidExpand;
- (void)adDidCollapse;
- (void)adDidLeaveApp;
- (void)adClickthroughDidClose;
- (void)adDidClose;
- (PBMInterstitialDisplayProperties * _Nonnull)interstitialDisplayProperties SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_PROTOCOL("_TtP12PrebidMobile37InterstitialControllerLoadingDelegate_")
@protocol InterstitialControllerLoadingDelegate <NSObject>
- (void)interstitialControllerDidLoadAd:(InterstitialController * _Nonnull)interstitialController;
- (void)interstitialController:(InterstitialController * _Nonnull)interstitialController didFailWithError:(NSError * _Nonnull)error;
@end

@protocol InterstitialEventLoadingDelegate;

SWIFT_PROTOCOL("_TtP12PrebidMobile32InterstitialEventHandlerProtocol_")
@protocol InterstitialEventHandlerProtocol <PBMInterstitialAd>
/// Delegate for custom event handler to inform the PBM SDK about the events related to the ad server communication.
@property (nonatomic, weak) id <InterstitialEventLoadingDelegate> _Nullable loadingDelegate;
/// Delegate for custom event handler to inform the PBM SDK about the events related to the user’s interaction with the ad.
@property (nonatomic, weak) id <InterstitialEventInteractionDelegate> _Nullable interactionDelegate;
@end


SWIFT_CLASS("_TtC12PrebidMobile34InterstitialEventHandlerStandalone")
@interface InterstitialEventHandlerStandalone : NSObject <InterstitialEventHandlerProtocol>
@property (nonatomic, weak) id <InterstitialEventLoadingDelegate> _Nullable loadingDelegate;
@property (nonatomic, weak) id <InterstitialEventInteractionDelegate> _Nullable interactionDelegate;
@property (nonatomic, readonly) BOOL isReady;
- (void)showFromViewController:(UIViewController * _Nullable)controller;
- (void)requestAdWithBidResponse:(BidResponse * _Nullable)bidResponse;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_PROTOCOL("_TtP12PrebidMobile32InterstitialEventLoadingDelegate_")
@protocol InterstitialEventLoadingDelegate <NSObject>
- (void)prebidDidWin;
- (void)adServerDidWin;
- (void)failedWithError:(NSError * _Nullable)error;
@end


SWIFT_CLASS("_TtC12PrebidMobile27InterstitialRenderingAdUnit")
@interface InterstitialRenderingAdUnit : BaseInterstitialAdUnit
@property (nonatomic) double skipButtonArea;
@property (nonatomic) enum PBMPosition skipButtonPosition;
@property (nonatomic) double skipDelay;
- (nonnull instancetype)initWithConfigID:(NSString * _Nonnull)configID OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithConfigID:(NSString * _Nonnull)configID minSizePercentage:(CGSize)minSizePercentage OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithConfigID:(NSString * _Nonnull)configID minSizePercentage:(CGSize)minSizePercentage eventHandler:(id _Nonnull)eventHandler OBJC_DESIGNATED_INITIALIZER;
- (void)callDelegate_didReceiveAd;
- (void)callDelegate_didFailToReceiveAdWith:(NSError * _Nullable)error;
- (void)callDelegate_willPresentAd;
- (void)callDelegate_didDismissAd;
- (void)callDelegate_willLeaveApplication;
- (void)callDelegate_didClickAd;
- (BOOL)callEventHandler_isReady SWIFT_WARN_UNUSED_RESULT;
- (void)callEventHandler_setLoadingDelegate:(NSObject * _Nullable)loadingDelegate;
- (void)callEventHandler_setInteractionDelegate;
- (void)callEventHandler_requestAdWith:(BidResponse * _Nullable)bidResponse;
- (void)callEventHandler_showFrom:(UIViewController * _Nullable)controller;
- (void)callEventHandler_trackImpression;
@end

@class NSDateFormatter;
@class PBMLogLevel;

SWIFT_CLASS_NAMED("Log")
@interface PBMLog : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull dateFormat;)
+ (NSString * _Nonnull)dateFormat SWIFT_WARN_UNUSED_RESULT;
+ (void)setDateFormat:(NSString * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSDateFormatter * _Nonnull dateFormatter;)
+ (NSDateFormatter * _Nonnull)dateFormatter SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) PBMLogLevel * _Nonnull logLevel;)
+ (PBMLogLevel * _Nonnull)logLevel SWIFT_WARN_UNUSED_RESULT;
+ (void)setLogLevel:(PBMLogLevel * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL logToFile;)
+ (BOOL)logToFile SWIFT_WARN_UNUSED_RESULT;
+ (void)setLogToFile:(BOOL)value;
+ (void)error:(id _Nonnull)object filename:(NSString * _Nonnull)filename line:(NSInteger)line function:(NSString * _Nonnull)function;
+ (void)info:(id _Nonnull)object filename:(NSString * _Nonnull)filename line:(NSInteger)line function:(NSString * _Nonnull)function;
+ (void)debug:(id _Nonnull)object filename:(NSString * _Nonnull)filename line:(NSInteger)line function:(NSString * _Nonnull)function;
+ (void)verbose:(id _Nonnull)object filename:(NSString * _Nonnull)filename line:(NSInteger)line function:(NSString * _Nonnull)function;
+ (void)warn:(id _Nonnull)object filename:(NSString * _Nonnull)filename line:(NSInteger)line function:(NSString * _Nonnull)function;
+ (void)severe:(id _Nonnull)object filename:(NSString * _Nonnull)filename line:(NSInteger)line function:(NSString * _Nonnull)function;
+ (void)whereAmIWithFilename:(NSString * _Nonnull)filename line:(NSInteger)line function:(NSString * _Nonnull)function;
+ (void)serialWriteToLog:(NSString * _Nonnull)message;
+ (void)writeToLogFile:(NSString * _Nonnull)message;
+ (NSString * _Nullable)getLogFileAsString SWIFT_WARN_UNUSED_RESULT;
+ (void)clearLogFile;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("LogLevel")
@interface PBMLogLevel : NSObject
@property (nonatomic) NSInteger rawValue;
@property (nonatomic, copy) NSString * _Nonnull stringValue;
- (nonnull instancetype)initWithStringValue:(NSString * _Nonnull)stringValue rawValue:(NSInteger)rawValue;
- (nonnull instancetype)initWithRawValue:(NSInteger)rawValue OBJC_DESIGNATED_INITIALIZER;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBMLogLevel * _Nonnull debug;)
+ (PBMLogLevel * _Nonnull)debug SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBMLogLevel * _Nonnull verbose;)
+ (PBMLogLevel * _Nonnull)verbose SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBMLogLevel * _Nonnull info;)
+ (PBMLogLevel * _Nonnull)info SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBMLogLevel * _Nonnull warn;)
+ (PBMLogLevel * _Nonnull)warn SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBMLogLevel * _Nonnull error;)
+ (PBMLogLevel * _Nonnull)error SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBMLogLevel * _Nonnull severe;)
+ (PBMLogLevel * _Nonnull)severe SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol PrebidMediationDelegate;

SWIFT_CLASS("_TtC12PrebidMobile21MediationBannerAdUnit")
@interface MediationBannerAdUnit : NSObject
@property (nonatomic, readonly, strong) id <PrebidMediationDelegate> _Nonnull mediationDelegate;
@property (nonatomic, readonly, copy) NSString * _Nonnull configID;
@property (nonatomic, strong) AdFormat * _Nonnull adFormat;
@property (nonatomic) enum PBMAdPosition adPosition;
@property (nonatomic, readonly, strong) BannerParameters * _Nonnull bannerParameters;
@property (nonatomic, readonly, strong) VideoParameters * _Nonnull videoParameters;
@property (nonatomic) NSTimeInterval refreshInterval;
@property (nonatomic, copy) NSArray<NSValue *> * _Nullable additionalSizes;
- (void)addContextData:(NSString * _Nonnull)data forKey:(NSString * _Nonnull)key SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addExtData method instead.");
- (void)updateContextData:(NSSet<NSString *> * _Nonnull)data forKey:(NSString * _Nonnull)key SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use updateExtData method instead.");
- (void)removeContextDateForKey:(NSString * _Nonnull)key SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use removeExtData method instead.");
- (void)clearContextData SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use clearExtData method instead.");
- (void)addExtDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (void)updateExtDataWithKey:(NSString * _Nonnull)key value:(NSSet<NSString *> * _Nonnull)value;
- (void)removeExtDataForKey:(NSString * _Nonnull)forKey;
- (void)clearExtData;
- (void)addContextKeyword:(NSString * _Nonnull)newElement SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addExtKeyword method instead.");
- (void)addContextKeywords:(NSSet<NSString *> * _Nonnull)newElements SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addExtKeywords method instead.");
- (void)removeContextKeyword:(NSString * _Nonnull)element SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use removeExtKeyword method instead.");
- (void)clearContextKeywords SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use clearExtKeywords method instead.");
- (void)addExtKeyword:(NSString * _Nonnull)newElement;
- (void)addExtKeywords:(NSSet<NSString *> * _Nonnull)newElements;
- (void)removeExtKeyword:(NSString * _Nonnull)element;
- (void)clearExtKeywords;
- (void)setAppContent:(PBMORTBAppContent * _Nonnull)appContent;
- (void)clearAppContent;
- (void)addAppContentData:(NSArray<PBMORTBContentData *> * _Nonnull)dataObjects;
- (void)removeAppContentDataObject:(PBMORTBContentData * _Nonnull)dataObject;
- (void)clearAppContentDataObjects;
- (void)addUserData:(NSArray<PBMORTBContentData *> * _Nonnull)userDataObjects;
- (void)removeUserData:(PBMORTBContentData * _Nonnull)userDataObject;
- (void)clearUserData;
- (nonnull instancetype)initWithConfigID:(NSString * _Nonnull)configID size:(CGSize)size mediationDelegate:(id <PrebidMediationDelegate> _Nonnull)mediationDelegate OBJC_DESIGNATED_INITIALIZER;
- (void)fetchDemandWithCompletion:(void (^ _Nullable)(enum ResultCode))completion;
- (void)stopRefresh;
- (void)adObjectDidFailToLoadAdWithAdObject:(UIView * _Nonnull)adObject with:(NSError * _Nonnull)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12PrebidMobile31MediationBaseInterstitialAdUnit")
@interface MediationBaseInterstitialAdUnit : NSObject
@property (nonatomic, readonly, strong) BannerParameters * _Nonnull bannerParameters;
@property (nonatomic, readonly, strong) VideoParameters * _Nonnull videoParameters;
@property (nonatomic) BOOL isMuted;
@property (nonatomic) BOOL isSoundButtonVisible;
@property (nonatomic) double closeButtonArea;
@property (nonatomic) enum PBMPosition closeButtonPosition;
@property (nonatomic, readonly, copy) NSString * _Nonnull configId;
- (void)fetchDemandWithCompletion:(void (^ _Nullable)(enum ResultCode))completion;
- (void)addContextData:(NSString * _Nonnull)data forKey:(NSString * _Nonnull)key SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addExtData method instead.");
- (void)updateContextData:(NSSet<NSString *> * _Nonnull)data forKey:(NSString * _Nonnull)key SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use updateExtData method instead.");
- (void)removeContextDateForKey:(NSString * _Nonnull)key SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use removeExtData method instead.");
- (void)clearContextData SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use clearExtData method instead.");
- (void)addExtDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (void)updateExtDataWithKey:(NSString * _Nonnull)key value:(NSSet<NSString *> * _Nonnull)value;
- (void)removeExtDataForKey:(NSString * _Nonnull)forKey;
- (void)clearExtData;
- (void)addContextKeyword:(NSString * _Nonnull)newElement SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addExtKeyword method instead.");
- (void)addContextKeywords:(NSSet<NSString *> * _Nonnull)newElements SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addExtKeywords method instead.");
- (void)removeContextKeyword:(NSString * _Nonnull)element SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use removeExtKeyword method instead.");
- (void)clearContextKeywords SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use clearExtKeywords method instead.");
- (void)addExtKeyword:(NSString * _Nonnull)newElement;
- (void)addExtKeywords:(NSSet<NSString *> * _Nonnull)newElements;
- (void)removeExtKeyword:(NSString * _Nonnull)element;
- (void)clearExtKeywords;
- (void)setAppContent:(PBMORTBAppContent * _Nonnull)appContent;
- (void)clearAppContent;
- (void)addAppContentData:(NSArray<PBMORTBContentData *> * _Nonnull)dataObjects;
- (void)removeAppContentDataObject:(PBMORTBContentData * _Nonnull)dataObject;
- (void)clearAppContentDataObjects;
- (void)addUserData:(NSArray<PBMORTBContentData *> * _Nonnull)userDataObjects;
- (void)removeUserData:(PBMORTBContentData * _Nonnull)userDataObject;
- (void)clearUserData;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12PrebidMobile23MediationBidInfoWrapper")
@interface MediationBidInfoWrapper : NSObject
@property (nonatomic, copy) NSString * _Nullable keywords;
@property (nonatomic, copy) NSDictionary * _Nullable localExtras;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile27MediationInterstitialAdUnit")
@interface MediationInterstitialAdUnit : MediationBaseInterstitialAdUnit
@property (nonatomic, copy) NSSet<AdFormat *> * _Nonnull adFormats;
@property (nonatomic, copy) NSArray<NSValue *> * _Nullable additionalSizes;
@property (nonatomic) double skipButtonArea;
@property (nonatomic) enum PBMPosition skipButtonPosition;
@property (nonatomic) double skipDelay;
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId mediationDelegate:(id <PrebidMediationDelegate> _Nonnull)mediationDelegate;
@property (nonatomic, readonly, copy) NSString * _Nonnull configId;
@end

@class NativeRequest;
@class NativeEventTracker;
@class NativeAsset;
@class PlacementType;

SWIFT_CLASS("_TtC12PrebidMobile21MediationNativeAdUnit")
@interface MediationNativeAdUnit : NSObject
@property (nonatomic, strong) NativeRequest * _Nonnull nativeAdUnit;
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId mediationDelegate:(id <PrebidMediationDelegate> _Nonnull)mediationDelegate OBJC_DESIGNATED_INITIALIZER;
- (void)addEventTracker:(NSArray<NativeEventTracker *> * _Nonnull)eventTrackers;
- (void)addNativeAssets:(NSArray<NativeAsset *> * _Nonnull)assets;
- (void)setContextType:(ContextType * _Nonnull)contextType;
- (void)setPlacementType:(PlacementType * _Nonnull)placementType;
- (void)setPlacementCount:(NSInteger)placementCount;
- (void)setContextSubType:(ContextSubType * _Nonnull)contextSubType;
- (void)setSequence:(NSInteger)sequence;
- (void)setAssetURLSupport:(NSInteger)assetURLSupport;
- (void)setDURLSupport:(NSInteger)dURLSupport;
- (void)setPrivacy:(NSInteger)privacy;
- (void)setExt:(NSDictionary<NSString *, id> * _Nonnull)ext;
- (void)setAppContent:(PBMORTBAppContent * _Nonnull)appContent;
- (void)clearAppContent;
- (void)addAppContentData:(NSArray<PBMORTBContentData *> * _Nonnull)dataObjects;
- (void)removeAppContent:(PBMORTBContentData * _Nonnull)dataObject;
- (void)addUserData:(NSArray<PBMORTBContentData *> * _Nonnull)userDataObjects;
- (void)removeUserData:(PBMORTBContentData * _Nonnull)userDataObject;
- (void)clearUserData;
- (void)addContextData:(NSString * _Nonnull)data forKey:(NSString * _Nonnull)key SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addExtData method instead.");
- (void)updateContextData:(NSSet<NSString *> * _Nonnull)data forKey:(NSString * _Nonnull)key SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use updateExtData method instead.");
- (void)removeContextDateForKey:(NSString * _Nonnull)key SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use removeExtData method instead.");
- (void)clearContextData SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use clearExtData method instead.");
- (void)addExtDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (void)updateExtDataWithKey:(NSString * _Nonnull)key value:(NSSet<NSString *> * _Nonnull)value;
- (void)removeExtDataForKey:(NSString * _Nonnull)forKey;
- (void)clearExtData;
- (void)addContextKeyword:(NSString * _Nonnull)newElement SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addExtKeyword method instead.");
- (void)addContextKeywords:(NSSet<NSString *> * _Nonnull)newElements SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addExtKeywords method instead.");
- (void)removeContextKeyword:(NSString * _Nonnull)element SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use removeExtKeyword method instead.");
- (void)clearContextKeywords SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use clearExtKeywords method instead.");
- (void)addExtKeyword:(NSString * _Nonnull)newElement;
- (void)addExtKeywords:(NSSet<NSString *> * _Nonnull)newElements;
- (void)removeExtKeyword:(NSString * _Nonnull)element;
- (void)clearExtKeywords;
- (void)fetchDemandWithCompletion:(void (^ _Nullable)(enum ResultCode))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("MediationNativeUtils")
@interface PBMMediationNativeUtils : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile23MediationRewardedAdUnit")
@interface MediationRewardedAdUnit : MediationBaseInterstitialAdUnit
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId mediationDelegate:(id <PrebidMediationDelegate> _Nonnull)mediationDelegate OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("MediationUtils")
@interface PBMMediationUtils : NSObject
+ (BOOL)isServerParameterInTargetingInfo:(NSString * _Nonnull)serverParameter :(NSArray<NSString *> * _Nonnull)targetingInfo SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isServerParameterInTargetingInfoDict:(NSString * _Nonnull)serverParameter :(NSDictionary<NSString *, NSString *> * _Nonnull)targetingInfoDictionary SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isServerParameterDictInTargetingInfoDict:(NSDictionary<NSString *, NSString *> * _Nonnull)serverParametersDictionary :(NSDictionary<NSString *, NSString *> * _Nonnull)targetingInfoDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface NSString (SWIFT_EXTENSION(PrebidMobile))
@property (nonatomic, readonly, strong) UIImage * _Nullable base64DecodedImage;
@end

@class NativeAdMarkup;
@protocol NativeAdEventDelegate;
@class NativeTitle;
@class NativeData;
@class NativeImage;
@class NativeEventTrackerResponse;
enum NativeDataAssetType : NSInteger;
enum NativeImageAssetType : NSInteger;

SWIFT_CLASS("_TtC12PrebidMobile8NativeAd")
@interface NativeAd : NSObject
@property (nonatomic, strong) NativeAdMarkup * _Nullable nativeAdMarkup;
@property (nonatomic, weak) id <NativeAdEventDelegate> _Nullable delegate;
@property (nonatomic, readonly, copy) NSArray<NativeTitle *> * _Nonnull titles;
@property (nonatomic, readonly, copy) NSArray<NativeData *> * _Nonnull dataObjects;
@property (nonatomic, readonly, copy) NSArray<NativeImage *> * _Nonnull images;
@property (nonatomic, readonly, copy) NSArray<NativeEventTrackerResponse *> * _Nullable eventTrackers;
- (NSArray<NativeData *> * _Nonnull)dataObjectsOf:(enum NativeDataAssetType)dataType SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NativeImage *> * _Nonnull)imagesOf:(enum NativeImageAssetType)imageType SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nullable title;
@property (nonatomic, readonly, copy) NSString * _Nullable imageUrl;
@property (nonatomic, readonly, copy) NSString * _Nullable iconUrl;
@property (nonatomic, readonly, copy) NSString * _Nullable sponsoredBy;
@property (nonatomic, readonly, copy) NSString * _Nullable text;
@property (nonatomic, readonly, copy) NSString * _Nullable callToAction;
+ (NativeAd * _Nullable)createWithCacheId:(NSString * _Nonnull)cacheId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (BOOL)registerViewWithView:(UIView * _Nullable)view clickableViews:(NSArray<UIView *> * _Nullable)clickableViews;
@end

@class PBMNativeMarkupRequestObject;

SWIFT_CLASS_NAMED("NativeAdConfiguration")
@interface PBMNativeAdConfiguration : NSObject
/// Version of the Native Markup version in use.
@property (nonatomic, copy) NSString * _Nonnull version;
@property (nonatomic, strong) PBMNativeMarkupRequestObject * _Nonnull markupRequestObject;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP12PrebidMobile16NativeAdDelegate_")
@protocol NativeAdDelegate
/// A successful Prebid Native ad is returned
/// @param ad use this instance for displaying
- (void)nativeAdLoadedWithAd:(NativeAd * _Nonnull)ad;
/// Prebid Native was not found in the server returned response,
/// Please display the ad as regular ways
- (void)nativeAdNotFound;
/// Prebid Native ad was returned, however, the bid is not valid for displaying
/// Should be treated as on ad load failed
- (void)nativeAdNotValid;
@end


SWIFT_PROTOCOL("_TtP12PrebidMobile21NativeAdEventDelegate_")
@protocol NativeAdEventDelegate
@optional
/// Sent when the native ad is expired.
- (void)adDidExpireWithAd:(NativeAd * _Nonnull)ad;
/// Sent when the native view is clicked by the user.
- (void)adWasClickedWithAd:(NativeAd * _Nonnull)ad;
/// Sent when  an impression is recorded for an native ad
- (void)adDidLogImpressionWithAd:(NativeAd * _Nonnull)ad;
@end

@class NativeAdMarkupAsset;
@class NativeLink;

SWIFT_CLASS("_TtC12PrebidMobile14NativeAdMarkup")
@interface NativeAdMarkup : NSObject
/// Version of the Native Markup version in use.
@property (nonatomic, copy) NSString * _Nullable version;
/// List of native ad’s assets.
/// Required if no assetsurl.
/// Recommended as fallback even if assetsurl is provided.
@property (nonatomic, copy) NSArray<NativeAdMarkupAsset *> * _Nullable assets;
/// URL of an alternate source for the assets object.
/// The expected response is a JSON object mirroring the assets object in the bid response,
/// subject to certain requirements as specified in the individual objects.
/// Where present, overrides the asset object in the response.
@property (nonatomic, copy) NSString * _Nullable assetsurl;
/// URL where a dynamic creative specification may be found for populating this ad, per the Dynamic Content Ads Specification.
/// Note this is a beta option as the interpretation of the Dynamic Content Ads Specification and how to assign those elements
/// into a native ad is outside the scope of this spec and must be agreed offline between the parties
/// or as may be specified in a future revision of the Dynamic Content Ads spec.
/// Where present, overrides the asset object in the response.
@property (nonatomic, copy) NSString * _Nullable dcourl;
/// Destination Link.
/// This is default link object for the ad.
/// Individual assets can also have a link object which applies if the asset is activated(clicked).
/// If the asset doesn’t have a link object, the parent link object applies.
/// See LinkObject Definition
@property (nonatomic, strong) NativeLink * _Nullable link;
/// Array of impression tracking URLs, expected to return a 1x1 image or 204 response - typically only passed when using 3rd party trackers.
/// To be deprecated - replaced with eventtrackers.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable imptrackers;
/// Optional JavaScript impression tracker.
/// This is a valid HTML, Javascript is already wrapped in <script> tags.
/// It should be executed at impression time where it can be supported.
/// To be deprecated - replaced with eventtrackers.
@property (nonatomic, copy) NSString * _Nullable jstracker;
/// Array of tracking objects to run with the ad, in response to the declared supported methods in the request.
/// Replaces imptrackers and jstracker, to be deprecated.
@property (nonatomic, copy) NSArray<NativeEventTrackerResponse *> * _Nullable eventtrackers;
/// If support was indicated in the request, URL of a page informing the user about the buyer’s targeting activity.
@property (nonatomic, copy) NSString * _Nullable privacy;
/// This object is a placeholder that may contain custom JSON agreed to by the parties to support flexibility beyond the standard defined in this specification
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable ext;
- (nullable instancetype)initWithJsonString:(NSString * _Nullable)jsonString;
- (nonnull instancetype)initWithJsonDictionary:(NSDictionary<NSString *, id> * _Nonnull)jsonDictionary OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile19NativeAdMarkupAsset")
@interface NativeAdMarkupAsset : NSObject
/// Title object for title assets.
/// See TitleObject definition.
@property (nonatomic, strong) NativeTitle * _Nullable title;
/// Image object for image assets.
/// See ImageObject definition.
@property (nonatomic, strong) NativeImage * _Nullable img;
/// Data object for ratings, prices etc.
@property (nonatomic, strong) NativeData * _Nullable data;
/// Link object for call to actions.
/// The link object applies if the asset item is activated (clicked).
/// If there is no link object on the asset, the parent link object on the bid response applies.
@property (nonatomic, strong) NativeLink * _Nullable link;
/// This object is a placeholder that may contain custom JSON agreed to by the parties to support
/// flexibility beyond the standard defined in this specification
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable ext;
- (nonnull instancetype)initWithJsonDictionary:(NSDictionary<NSString *, id> * _Nonnull)jsonDictionary OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile11NativeAsset")
@interface NativeAsset : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12PrebidMobile15NativeAssetData")
@interface NativeAssetData : NativeAsset
@property (nonatomic, strong) id _Nullable ext;
- (nonnull instancetype)initWithType:(enum DataAsset)type required:(BOOL)required OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithIsRequired:(BOOL)isRequired SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12PrebidMobile16NativeAssetImage")
@interface NativeAssetImage : NativeAsset
@property (nonatomic, strong) ImageAsset * _Nullable type;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable mimes;
@property (nonatomic, strong) id _Nullable ext;
- (nonnull instancetype)initWithMinimumWidth:(NSInteger)minimumWidth minimumHeight:(NSInteger)minimumHeight required:(BOOL)required;
- (nonnull instancetype)initWithIsRequired:(BOOL)isRequired OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile16NativeAssetTitle")
@interface NativeAssetTitle : NativeAsset
@property (nonatomic, strong) id _Nullable ext;
- (nonnull instancetype)initWithLength:(NSInteger)length required:(BOOL)required OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithIsRequired:(BOOL)isRequired SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC12PrebidMobile10NativeData")
@interface NativeData : NSObject
/// The formatted string of data to be displayed.
/// Can contain a formatted value such as “5 stars” or “$10” or “3.4 stars out of 5”.
@property (nonatomic, copy) NSString * _Nullable value;
/// This object is a placeholder that may contain custom JSON agreed to by the parties to support
/// flexibility beyond the standard defined in this specification
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable ext;
- (nonnull instancetype)initWithJsonDictionary:(NSDictionary<NSString *, id> * _Nonnull)jsonDictionary OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, NativeDataAssetType, open) {
  NativeDataAssetTypeUndefined = 0,
  NativeDataAssetTypeSponsored = 1,
/// Sponsored By message where response should contain the brand name of the sponsor.
  NativeDataAssetTypeDesc = 2,
/// Descriptive text associated with the product or service being advertised. Longer length of text in response may be truncated or ellipsed by the exchange.
  NativeDataAssetTypeRating = 3,
/// Rating of the product being offered to the user. For example an app’s rating in an app store from 0-5.
  NativeDataAssetTypeLikes = 4,
/// Number of social ratings or “likes” of the product being offered to the user.
  NativeDataAssetTypeDownloads = 5,
/// Number downloads/installs of this product
  NativeDataAssetTypePrice = 6,
/// Price for product / app / in-app purchase. Value should include currency symbol in localised format.
  NativeDataAssetTypeSalePrice = 7,
/// Sale price that can be used together with price to indicate a discounted price compared to a regular price. Value should include currency symbol in localised format.
  NativeDataAssetTypePhone = 8,
/// Phone number
  NativeDataAssetTypeAddress = 9,
/// Address
  NativeDataAssetTypeDesc2 = 10,
/// Additional descriptive text associated text with the product or service being advertised
  NativeDataAssetTypeDisplayURL = 11,
/// Display URL for the text ad. To be used when sponsoring entity doesn’t own the content. IE sponsored by BRAND on SITE (where SITE is transmitted in this field).
  NativeDataAssetTypeCtaText = 12,
/// CTA description - descriptive text describing a ‘call to action’ button for the destination URL.
  NativeDataAssetTypeCustom = 500,
};


SWIFT_CLASS("_TtC12PrebidMobile18NativeEventTracker")
@interface NativeEventTracker : NSObject
- (nonnull instancetype)initWithEvent:(EventType * _Nonnull)event methods:(NSArray<EventTracking *> * _Nonnull)methods OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12PrebidMobile26NativeEventTrackerResponse")
@interface NativeEventTrackerResponse : NSObject
/// The URL of the image or js.
/// Required for image or js, optional for custom.
@property (nonatomic, copy) NSString * _Nullable url;
/// To be agreed individually with the exchange, an array of key:value objects for custom tracking,
/// for example the account number of the DSP with a tracking company. IE {“accountnumber”:”123”}.
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable customdata;
/// This object is a placeholder that may contain custom JSON agreed to by the parties to support flexibility beyond the standard defined in this specification
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable ext;
- (nonnull instancetype)initWithJsonDictionary:(NSDictionary<NSString *, id> * _Nonnull)jsonDictionary OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile11NativeImage")
@interface NativeImage : NSObject
/// URL of the image asset.
@property (nonatomic, copy) NSString * _Nullable url;
/// This object is a placeholder that may contain custom JSON agreed to by the parties to support
/// flexibility beyond the standard defined in this specification
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable ext;
- (nonnull instancetype)initWithJsonDictionary:(NSDictionary<NSString *, id> * _Nonnull)jsonDictionary OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, NativeImageAssetType, open) {
  NativeImageAssetTypeIcon = 1,
  NativeImageAssetTypeMain = 3,
  NativeImageAssetTypeCustom = 500,
};


SWIFT_CLASS("_TtC12PrebidMobile10NativeLink")
@interface NativeLink : NSObject
/// Landing URL of the clickable link.
@property (nonatomic, copy) NSString * _Nullable url;
/// List of third-party tracker URLs to be fired on click of the URL.
@property (nonatomic, copy) NSArray<NSString *> * _Nullable clicktrackers;
/// Fallback URL for deeplink.
/// To be used if the URL given in url is not supported by the device.
@property (nonatomic, copy) NSString * _Nullable fallback;
/// This object is a placeholder that may contain custom JSON agreed to by the parties to support flexibility beyond the standard defined in this specification
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable ext;
- (nonnull instancetype)initWithJsonDictionary:(NSDictionary<NSString *, id> * _Nonnull)jsonDictionary OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("NativeMarkupRequestObject")
@interface PBMNativeMarkupRequestObject : NSObject <NSCopying, PBMJsonCodable>
/// [Recommended]
/// [Integer]
/// The context in which the ad appears.
/// See NativeContextType
@property (nonatomic, strong) ContextType * _Nullable context;
/// [Integer]
/// A more detailed context in which the ad appears.
/// See NativeContextSubtype
@property (nonatomic, strong) ContextSubType * _Nullable contextsubtype;
/// [Recommended]
/// [Integer]
/// The design/format/layout of the ad unit being offered.
/// See NativePlacementType
@property (nonatomic, strong) PlacementType * _Nullable plcmttype;
/// [Integer]
/// The number of identical placements in this Layout. Refer Section 8.1 Multiplacement Bid Requests for further detail.
@property (nonatomic) NSInteger plcmtcnt;
/// [Integer]
/// 0 for the first ad, 1 for the second ad, and so on.
/// Note this would generally NOT be used in combination with plcmtcnt -
/// either you are auctioning multiple identical placements (in which case plcmtcnt>1, seq=0)
/// or you are holding separate auctions for distinct items in the feed (in which case plcmtcnt=1, seq=>=1)
@property (nonatomic) NSInteger seq;
/// [Required]
/// An array of Asset Objects. Any objects bid response must comply with the array of elements expressed in the bid request.
@property (nonatomic, copy) NSArray<NativeAsset *> * _Nullable assets;
/// [Integer]
/// Whether the supply source / impression supports returning an assetsurl instead of an asset object. 0 or the absence of the field indicates no such support.
@property (nonatomic) NSInteger aurlsupport;
/// [Integer]
/// Whether the supply source / impression supports returning a dco url instead of an asset object. 0 or the absence of the field indicates no such support.
/// Beta feature.
@property (nonatomic) NSInteger durlsupport;
/// Specifies what type of event objects tracking is supported - see Event Trackers Request Object
@property (nonatomic, copy) NSArray<NativeEventTracker *> * _Nullable eventtrackers;
/// [Recommended]
/// [Integer]
/// Set to 1 when the native ad supports buyer-specific privacy notice. Set to 0 (or field absent) when the native ad doesn’t support custom privacy links or if support is unknown.
@property (nonatomic) NSInteger privacy;
/// This object is a placeholder that may contain custom JSON agreed to by the parties to support flexibility beyond the standard defined in this specification
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable ext;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable jsonDictionary;
- (NSString * _Nullable)toJsonStringWithError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC12PrebidMobile13NativeRequest")
@interface NativeRequest : AdUnit
@property (nonatomic, copy) NSString * _Nonnull version;
@property (nonatomic, strong) ContextType * _Nullable context;
@property (nonatomic, strong) ContextSubType * _Nullable contextSubType;
@property (nonatomic, strong) PlacementType * _Nullable placementType;
@property (nonatomic) NSInteger placementCount;
@property (nonatomic) NSInteger sequence;
@property (nonatomic, copy) NSArray<NativeAsset *> * _Nullable assets;
@property (nonatomic) NSInteger asseturlsupport;
@property (nonatomic) NSInteger durlsupport;
@property (nonatomic, copy) NSArray<NativeEventTracker *> * _Nullable eventtrackers;
@property (nonatomic) NSInteger privacy;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable ext;
@property (nonatomic, copy) NSString * _Nonnull configId;
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId assets:(NSArray<NativeAsset *> * _Nullable)assets eventTrackers:(NSArray<NativeEventTracker *> * _Nullable)eventTrackers;
- (void)addNativeAssets:(NSArray<NativeAsset *> * _Nonnull)assets;
- (void)addNativeEventTracker:(NSArray<NativeEventTracker *> * _Nonnull)eventTrackers;
- (NSDictionary * _Nullable)getNativeRequestObject SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC12PrebidMobile11NativeTitle")
@interface NativeTitle : NSObject
/// The text associated with the text element.
@property (nonatomic, copy) NSString * _Nullable text;
/// This object is a placeholder that may contain custom JSON agreed to by the parties to support
/// flexibility beyond the standard defined in this specification
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable ext;
- (nonnull instancetype)initWithJsonDictionary:(NSDictionary<NSString *, id> * _Nonnull)jsonDictionary OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, PBMNetworkType, "NetworkType", open) {
  PBMNetworkTypeUnknown = 0,
  PBMNetworkTypeWifi = 2,
  PBMNetworkTypeCelluar = 3,
  PBMNetworkTypeOffline = 4,
};


@interface PBMError (SWIFT_EXTENSION(PrebidMobile))
+ (enum ResultCode)demandResultFrom:(NSError * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end

@class NSURLQueryItem;

SWIFT_CLASS_NAMED("PathBuilder")
@interface PBMPathBuilder : NSObject
+ (NSString * _Nullable)buildURLFor:(NSString * _Nonnull)host path:(NSString * _Nonnull)path queryItems:(NSArray<NSURLQueryItem *> * _Nullable)queryItems SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile13PlacementType")
@interface PlacementType : SingleContainerInt
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PlacementType * _Nonnull FeedContent;)
+ (PlacementType * _Nonnull)FeedContent SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PlacementType * _Nonnull AtomicContent;)
+ (PlacementType * _Nonnull)AtomicContent SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PlacementType * _Nonnull OutsideContent;)
+ (PlacementType * _Nonnull)OutsideContent SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PlacementType * _Nonnull RecommendationWidget;)
+ (PlacementType * _Nonnull)RecommendationWidget SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PlacementType * _Nonnull Custom;)
+ (PlacementType * _Nonnull)Custom SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, PBMPosition, "Position", open) {
  PBMPositionUndefined = -1,
  PBMPositionTopLeft = 0,
  PBMPositionTopCenter = 1,
  PBMPositionTopRight = 2,
  PBMPositionCenter = 3,
  PBMPositionBottomLeft = 4,
  PBMPositionBottomCenter = 5,
  PBMPositionBottomRight = 6,
  PBMPositionCustom = 7,
};

enum PrebidInitializationStatus : NSInteger;

SWIFT_CLASS("_TtC12PrebidMobile6Prebid")
@interface Prebid : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull bidderNameAppNexus;)
+ (NSString * _Nonnull)bidderNameAppNexus SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull bidderNameRubiconProject;)
+ (NSString * _Nonnull)bidderNameRubiconProject SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) BOOL timeoutUpdated;
@property (nonatomic, copy) NSString * _Nonnull prebidServerAccountId;
@property (nonatomic) BOOL pbsDebug;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull customHeaders;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull storedBidResponses;
/// This property is set by the developer when he is willing to assign the assetID for Native ad.
/// *
@property (nonatomic) BOOL shouldAssignNativeAssetID;
/// This property is set by the developer when he is willing to share the location for better ad targeting
/// *
@property (nonatomic) BOOL shareGeoLocation;
/// Set the desidered verbosity of the logs
@property (nonatomic, strong) PBMLogLevel * _Nonnull logLevel;
/// Array  containing objects that hold External UserId parameters.
@property (nonatomic, copy) NSArray<ExternalUserId *> * _Nonnull externalUserIdArray;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) Prebid * _Nonnull shared;)
+ (Prebid * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, copy) NSString * _Nonnull omsdkVersion;
@property (nonatomic) enum PrebidHost prebidServerHost;
@property (nonatomic, copy) NSString * _Nullable customStatusEndpoint;
@property (nonatomic) NSInteger timeoutMillis;
@property (nonatomic, strong) NSNumber * _Nullable timeoutMillisDynamic;
@property (nonatomic, copy) NSString * _Nullable storedAuctionResponse;
@property (nonatomic) BOOL useCacheForReportingWithRenderingAPI;
@property (nonatomic) NSTimeInterval creativeFactoryTimeout;
@property (nonatomic) NSTimeInterval creativeFactoryTimeoutPreRenderContent;
@property (nonatomic) BOOL useExternalClickthroughBrowser;
@property (nonatomic) enum PBMClickbrowserType impClickbrowserType;
@property (nonatomic) BOOL debugLogFileEnabled;
@property (nonatomic) BOOL locationUpdatesEnabled;
- (BOOL)setCustomPrebidServerWithUrl:(NSString * _Nonnull)url error:(NSError * _Nullable * _Nullable)error;
- (void)addStoredBidResponseWithBidder:(NSString * _Nonnull)bidder responseId:(NSString * _Nonnull)responseId;
- (void)clearStoredBidResponses;
- (NSArray<NSDictionary<NSString *, NSString *> *> * _Nullable)getStoredBidResponses SWIFT_WARN_UNUSED_RESULT;
- (void)addCustomHeaderWithName:(NSString * _Nonnull)name value:(NSString * _Nonnull)value;
- (void)clearCustomHeaders;
/// Initializes PrebidMobile SDK.
/// Checks the status of Prebid Server. The <code>customStatusEndpoint</code> property is used as server status endpoint.
/// If <code>customStatusEndpoint</code> property is not provided, the SDK will use default endpoint - <code>host</code> + <code>/status</code>.
/// The <code>host</code> value is obtained from <code>Prebid.shared.prebidServerHost</code>.
/// Checks the version of GMA SDK. If the version is not supported - logs warning.
/// Use this SDK initializer if you’re using PrebidMobile with GMA SDK.
/// \param gadMobileAdsObject GADMobileAds object
///
/// \param completion returns initialization status and optional error
///
+ (void)initializeSDK:(id _Nullable)gadMobileAdsObject :(void (^ _Nullable)(enum PrebidInitializationStatus, NSError * _Nullable))completion;
/// Initializes PrebidMobile SDK.
/// Checks the status of Prebid Server. The <code>customStatusEndpoint</code> property is used as server status endpoint.
/// If <code>customStatusEndpoint</code> property is not provided, the SDK will use default endpoint - <code>host</code> + <code>/status</code>.
/// The <code>host</code> value is obtained from <code>Prebid.shared.prebidServerHost</code>.
/// Use this SDK initializer if you’re using PrebidMobile without GMA SDK.
/// \param completion returns initialization status and optional error
///
+ (void)initializeSDK:(void (^ _Nullable)(enum PrebidInitializationStatus, NSError * _Nullable))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12PrebidMobile15PrebidConstants")
@interface PrebidConstants : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<PBApi *> * _Nonnull supportedRenderingBannerAPISignals;)
+ (NSArray<PBApi *> * _Nonnull)supportedRenderingBannerAPISignals SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull companionHTMLTemplate;)
+ (NSString * _Nonnull)companionHTMLTemplate SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, PrebidHost, open) {
/// URL <a href="URL">https://ib.adnxs.com/openrtb2/prebid</a>
  PrebidHostAppnexus = 0,
/// URL <a href="URL">https://prebid-server.rubiconproject.com/openrtb2/auction</a>
  PrebidHostRubicon = 1,
  PrebidHostCustom = 2,
};


SWIFT_CLASS("_TtC12PrebidMobile22PrebidImagesRepository")
@interface PrebidImagesRepository : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull muteDisabled;)
+ (NSString * _Nonnull)muteDisabled SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull muteEnabled;)
+ (NSString * _Nonnull)muteEnabled SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull closeButton;)
+ (NSString * _Nonnull)closeButton SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull skipButton;)
+ (NSString * _Nonnull)skipButton SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, PrebidInitializationStatus, open) {
/// Prebid SDK successfully initialized.
  PrebidInitializationStatusSucceeded = 0,
/// Prebid SDK is not able to work.
  PrebidInitializationStatusFailed = 1,
/// Something went wrong during PBS status checking.
  PrebidInitializationStatusServerStatusWarning = 2,
};


SWIFT_CLASS("_TtC12PrebidMobile15PrebidJSLibrary")
@interface PrebidJSLibrary : NSObject
@property (nonatomic, copy) NSString * _Nullable downloadURLString;
@property (nonatomic, copy) NSString * _Nonnull name;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name downloadURLString:(NSString * _Nullable)downloadURLString OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12PrebidMobile22PrebidJSLibraryManager")
@interface PrebidJSLibraryManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PrebidJSLibraryManager * _Nonnull shared;)
+ (PrebidJSLibraryManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (void)downloadLibraries;
- (NSString * _Nullable)getMRAIDLibrary SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getOMSDKLibrary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP12PrebidMobile23PrebidMediationDelegate_")
@protocol PrebidMediationDelegate
/// Puts to ad object’s localExtra the ad object (winning bid or native ad) and configId
/// and populates adObject’s keywords by targeting info
/// @return YES on success and NO otherwise (when the passed ad has wrong type)
- (BOOL)setUpAdObjectWith:(NSDictionary<NSString *, id> * _Nonnull)values SWIFT_WARN_UNUSED_RESULT;
/// Removes an bid info from ad object’s localExtra
/// and prebid-specific keywords from ad object’s keywords
- (void)cleanUpAdObject;
/// Returns ad view that was passed into PrebidMediationDelegate earlier.
/// Returns nil if there was no view passed.
- (UIView * _Nullable)getAdView SWIFT_WARN_UNUSED_RESULT;
@end

@class PBMUserAgentService;
@class PrebidServerResponse;
@class NSData;

SWIFT_PROTOCOL("_TtP12PrebidMobile30PrebidServerConnectionProtocol_")
@protocol PrebidServerConnectionProtocol
@property (nonatomic, readonly, strong) PBMUserAgentService * _Nonnull userAgentService;
- (void)fireAndForget:(NSString * _Nullable)resourceURL;
- (void)head:(NSString * _Nullable)resourceURL timeout:(NSTimeInterval)timeout callback:(void (^ _Nonnull)(PrebidServerResponse * _Nonnull))callback;
- (void)get:(NSString * _Nullable)resourceURL timeout:(NSTimeInterval)timeout callback:(void (^ _Nonnull)(PrebidServerResponse * _Nonnull))callback;
- (void)post:(NSString * _Nullable)resourceURL data:(NSData * _Nullable)data timeout:(NSTimeInterval)timeout callback:(void (^ _Nonnull)(PrebidServerResponse * _Nonnull))callback;
- (void)post:(NSString * _Nullable)resourceURL contentType:(NSString * _Nullable)contentType data:(NSData * _Nullable)data timeout:(NSTimeInterval)timeout callback:(void (^ _Nonnull)(PrebidServerResponse * _Nonnull))callback;
- (void)download:(NSString * _Nullable)resourceURL callback:(void (^ _Nonnull)(PrebidServerResponse * _Nonnull))callback;
@end

@class NSURLProtocol;

SWIFT_CLASS("_TtC12PrebidMobile22PrebidServerConnection")
@interface PrebidServerConnection : NSObject <NSURLSessionDelegate, PrebidServerConnectionProtocol>
@property (nonatomic, readonly, strong) PBMUserAgentService * _Nonnull userAgentService;
@property (nonatomic, copy) NSArray<SWIFT_METATYPE(NSURLProtocol)> * _Nonnull protocolClasses;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PrebidServerConnection * _Nonnull shared;)
+ (PrebidServerConnection * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull userAgentHeaderKey;)
+ (NSString * _Nonnull)userAgentHeaderKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull contentTypeKey;)
+ (NSString * _Nonnull)contentTypeKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull contentTypeVal;)
+ (NSString * _Nonnull)contentTypeVal SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull internalIDKey;)
+ (NSString * _Nonnull)internalIDKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull isPBMRequestKey;)
+ (NSString * _Nonnull)isPBMRequestKey SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithUserAgentService:(PBMUserAgentService * _Nonnull)userAgentService;
- (void)fireAndForget:(NSString * _Nullable)resourceURL;
- (void)head:(NSString * _Nullable)resourceURL timeout:(NSTimeInterval)timeout callback:(void (^ _Nonnull)(PrebidServerResponse * _Nonnull))callback;
- (void)get:(NSString * _Nullable)resourceURL timeout:(NSTimeInterval)timeout callback:(void (^ _Nonnull)(PrebidServerResponse * _Nonnull))callback;
- (void)post:(NSString * _Nullable)resourceURL data:(NSData * _Nullable)data timeout:(NSTimeInterval)timeout callback:(void (^ _Nonnull)(PrebidServerResponse * _Nonnull))callback;
- (void)post:(NSString * _Nullable)resourceURL contentType:(NSString * _Nullable)contentType data:(NSData * _Nullable)data timeout:(NSTimeInterval)timeout callback:(void (^ _Nonnull)(PrebidServerResponse * _Nonnull))callback;
- (void)download:(NSString * _Nullable)resourceURL callback:(void (^ _Nonnull)(PrebidServerResponse * _Nonnull))callback;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class PBMServerEvent;

SWIFT_CLASS("_TtC12PrebidMobile24PrebidServerEventTracker")
@interface PrebidServerEventTracker : NSObject <PBMEventTrackerProtocol>
@property (nonatomic, readonly, copy) NSArray<PBMServerEvent *> * _Nonnull serverEvents;
- (nonnull instancetype)initWithServerEvents:(NSArray<PBMServerEvent *> * _Nonnull)serverEvents OBJC_DESIGNATED_INITIALIZER;
- (void)trackEvent:(PBMTrackingEvent)event;
- (void)trackVideoAdLoaded:(PBMVideoVerificationParameters * _Null_unspecified)parameters;
- (void)trackStartVideoWithDuration:(CGFloat)duration volume:(CGFloat)volume;
- (void)trackVolumeChanged:(CGFloat)playerVolume deviceVolume:(CGFloat)deviceVolume;
- (void)addServerEvents:(NSArray<PBMServerEvent *> * _Nonnull)serverEvents;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12PrebidMobile20PrebidServerResponse")
@interface PrebidServerResponse : NSObject
@property (nonatomic, readonly) BOOL isOKStatusCode;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable jsonDict;
@property (nonatomic, copy) NSData * _Nullable rawData;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable requestHeaders;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable responseHeaders;
@property (nonatomic, copy) NSString * _Nullable requestURL;
@property (nonatomic) NSError * _Nullable error;
@property (nonatomic) NSInteger statusCode;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("Reachability")
@interface PBMReachability : NSObject
/// Shared instance for checking whether the default route is available.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBMReachability * _Nonnull shared;)
+ (PBMReachability * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) enum PBMNetworkType currentReachabilityStatus;
/// Returns true is network is reachable otherwise returns false
@property (nonatomic, readonly) BOOL isNetworkReachable;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)stopNotifier;
/// Starts monitoring of the network status.
/// Calls the reachableBlock when network is restored
- (void)onNetworkRestored:(void (^ _Nonnull)(PBMReachability * _Nullable))reachableBlock;
@end

typedef SWIFT_ENUM(NSInteger, ResultCode, open) {
  ResultCodePrebidDemandFetchSuccess = 0,
  ResultCodePrebidServerNotSpecified = 1,
  ResultCodePrebidInvalidAccountId = 2,
  ResultCodePrebidInvalidConfigId = 3,
  ResultCodePrebidInvalidSize = 4,
  ResultCodePrebidNetworkError = 5,
  ResultCodePrebidServerError = 6,
  ResultCodePrebidDemandNoBids = 7,
  ResultCodePrebidDemandTimedOut = 8,
  ResultCodePrebidServerURLInvalid = 9,
  ResultCodePrebidUnknownError = 10,
  ResultCodePrebidInvalidResponseStructure = 1000,
  ResultCodePrebidInternalSDKError = 7000,
  ResultCodePrebidWrongArguments = 7001,
  ResultCodePrebidNoVastTagInMediaData = 7002,
  ResultCodePrebidSDKMisuse = 8000,
  ResultCodePrebidSDKMisusePreviousFetchNotCompletedYet = 8001,
};


SWIFT_PROTOCOL("_TtP12PrebidMobile32RewardedEventInteractionDelegate_")
@protocol RewardedEventInteractionDelegate <InterstitialEventInteractionDelegate>
- (void)userDidEarnReward:(NSObject * _Nullable)reward;
@end


SWIFT_CLASS("_TtC12PrebidMobile14RewardedAdUnit")
@interface RewardedAdUnit : BaseInterstitialAdUnit <RewardedEventInteractionDelegate>
@property (nonatomic, readonly, strong) NSObject * _Nullable reward;
- (nonnull instancetype)initWithConfigID:(NSString * _Nonnull)configID eventHandler:(id _Nonnull)eventHandler;
- (nonnull instancetype)initWithConfigID:(NSString * _Nonnull)configID;
- (void)userDidEarnReward:(NSObject * _Nullable)reward;
- (void)interstitialControllerDidCloseAd:(InterstitialController * _Nonnull)interstitialController;
- (void)callDelegate_didReceiveAd;
- (void)callDelegate_didFailToReceiveAdWith:(NSError * _Nullable)error;
- (void)callDelegate_willPresentAd;
- (void)callDelegate_didDismissAd;
- (void)callDelegate_willLeaveApplication;
- (void)callDelegate_didClickAd;
- (BOOL)callEventHandler_isReady SWIFT_WARN_UNUSED_RESULT;
- (void)callEventHandler_setLoadingDelegate:(NSObject * _Nullable)loadingDelegate;
- (void)callEventHandler_setInteractionDelegate;
- (void)callEventHandler_requestAdWith:(BidResponse * _Nullable)bidResponse;
- (void)callEventHandler_showFrom:(UIViewController * _Nullable)controller;
- (void)callEventHandler_trackImpression;
@end


SWIFT_PROTOCOL("_TtP12PrebidMobile22RewardedAdUnitDelegate_")
@protocol RewardedAdUnitDelegate <NSObject>
@optional
/// Called when an ad is loaded and ready for display
- (void)rewardedAdDidReceiveAd:(RewardedAdUnit * _Nonnull)rewardedAd;
/// Called when user is able to receive a reward from the app
- (void)rewardedAdUserDidEarnReward:(RewardedAdUnit * _Nonnull)rewardedAd;
/// Called when the load process fails to produce a viable ad
- (void)rewardedAd:(RewardedAdUnit * _Nonnull)rewardedAd didFailToReceiveAdWithError:(NSError * _Nullable)error;
/// Called when the interstitial view will be launched,  as a result of show() method.
- (void)rewardedAdWillPresentAd:(RewardedAdUnit * _Nonnull)rewardedAd;
/// Called when the interstial is dismissed by the user
- (void)rewardedAdDidDismissAd:(RewardedAdUnit * _Nonnull)rewardedAd;
/// Called when an ad causes the sdk to leave the app
- (void)rewardedAdWillLeaveApplication:(RewardedAdUnit * _Nonnull)rewardedAd;
/// Called when user clicked the ad
- (void)rewardedAdDidClickAd:(RewardedAdUnit * _Nonnull)rewardedAd;
@end

@protocol RewardedEventLoadingDelegate;

SWIFT_PROTOCOL("_TtP12PrebidMobile28RewardedEventHandlerProtocol_")
@protocol RewardedEventHandlerProtocol <PBMInterstitialAd>
/// Delegate for custom event handler to inform the PBM SDK about the events related to the ad server communication.
@property (nonatomic, weak) id <RewardedEventLoadingDelegate> _Nullable loadingDelegate;
/// Delegate for custom event handler to inform the PBM SDK about the events related to the user’s interaction with the ad.
@property (nonatomic, weak) id <RewardedEventInteractionDelegate> _Nullable interactionDelegate;
@end


SWIFT_CLASS("_TtC12PrebidMobile30RewardedEventHandlerStandalone")
@interface RewardedEventHandlerStandalone : NSObject <RewardedEventHandlerProtocol>
@property (nonatomic, weak) id <RewardedEventLoadingDelegate> _Nullable loadingDelegate;
@property (nonatomic, weak) id <RewardedEventInteractionDelegate> _Nullable interactionDelegate;
@property (nonatomic, readonly) BOOL isReady;
- (void)showFromViewController:(UIViewController * _Nullable)controller;
- (void)requestAdWithBidResponse:(BidResponse * _Nullable)bidResponse;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_PROTOCOL("_TtP12PrebidMobile28RewardedEventLoadingDelegate_")
@protocol RewardedEventLoadingDelegate <InterstitialEventLoadingDelegate>
@property (nonatomic, weak) NSObject * _Nullable reward;
@end


SWIFT_CLASS("_TtC12PrebidMobile19RewardedVideoAdUnit")
@interface RewardedVideoAdUnit : AdUnit <PBMVideoBasedAdUnitProtocol>
@property (nonatomic, strong) VideoParameters * _Nonnull parameters SWIFT_DEPRECATED_MSG("This property is deprecated. Please, use videoParameters instead.");
@property (nonatomic, strong) VideoParameters * _Nonnull videoParameters;
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId minWidthPerc:(NSInteger)minWidthPerc minHeightPerc:(NSInteger)minHeightPerc;
@end


SWIFT_CLASS_NAMED("ServerEvent")
@interface PBMServerEvent : NSObject
- (nonnull instancetype)initWithUrl:(NSString * _Nonnull)url expectedEventType:(PBMTrackingEvent)expectedEventType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC12PrebidMobile7Signals")
@interface Signals : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// <h1>OpenRTB - API Frameworks</h1>
/// \code
/// | Value | Description |
/// |-------|-------------|
/// | 1     | VPAID 1.0   |
/// | 2     | VPAID 2.0   |
/// | 3     | MRAID-1     |
/// | 4     | ORMMA       |
/// | 5     | MRAID-2     |
/// | 6     | MRAID-3     |
/// | 7     | OMID-1      |
///
/// \endcode
SWIFT_CLASS_NAMED("Api")
@interface PBApi : SingleContainerInt
/// VPAID 1.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBApi * _Nonnull VPAID_1;)
+ (PBApi * _Nonnull)VPAID_1 SWIFT_WARN_UNUSED_RESULT;
/// VPAID 2.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBApi * _Nonnull VPAID_2;)
+ (PBApi * _Nonnull)VPAID_2 SWIFT_WARN_UNUSED_RESULT;
/// MRAID-1
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBApi * _Nonnull MRAID_1;)
+ (PBApi * _Nonnull)MRAID_1 SWIFT_WARN_UNUSED_RESULT;
/// ORMMA
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBApi * _Nonnull ORMMA;)
+ (PBApi * _Nonnull)ORMMA SWIFT_WARN_UNUSED_RESULT;
/// MRAID-2
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBApi * _Nonnull MRAID_2;)
+ (PBApi * _Nonnull)MRAID_2 SWIFT_WARN_UNUSED_RESULT;
/// MRAID-3
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBApi * _Nonnull MRAID_3;)
+ (PBApi * _Nonnull)MRAID_3 SWIFT_WARN_UNUSED_RESULT;
/// OMID-1
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBApi * _Nonnull OMID_1;)
+ (PBApi * _Nonnull)OMID_1 SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


/// <h1>OpenRTB - Playback Methods</h1>
/// \code
/// | Value | Description                                              |
/// |-------|----------------------------------------------------------|
/// | 1     | Initiates on Page Load with Sound On                     |
/// | 2     | Initiates on Page Load with Sound Off by Default         |
/// | 3     | Initiates on Click with Sound On                         |
/// | 4     | Initiates on Mouse-Over with Sound On                    |
/// | 5     | Initiates on Entering Viewport with Sound On             |
/// | 6     | Initiates on Entering Viewport with Sound Off by Default |
///
/// \endcode
SWIFT_CLASS_NAMED("PlaybackMethod")
@interface PBPlaybackMethod : SingleContainerInt
/// Initiates on Page Load with Sound On
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlaybackMethod * _Nonnull AutoPlaySoundOn;)
+ (PBPlaybackMethod * _Nonnull)AutoPlaySoundOn SWIFT_WARN_UNUSED_RESULT;
/// Initiates on Page Load with Sound Off by Default
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlaybackMethod * _Nonnull AutoPlaySoundOff;)
+ (PBPlaybackMethod * _Nonnull)AutoPlaySoundOff SWIFT_WARN_UNUSED_RESULT;
/// Initiates on Click with Sound On
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlaybackMethod * _Nonnull ClickToPlay;)
+ (PBPlaybackMethod * _Nonnull)ClickToPlay SWIFT_WARN_UNUSED_RESULT;
/// Initiates on Mouse-Over with Sound On
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlaybackMethod * _Nonnull MouseOver;)
+ (PBPlaybackMethod * _Nonnull)MouseOver SWIFT_WARN_UNUSED_RESULT;
/// Initiates on Entering Viewport with Sound On
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlaybackMethod * _Nonnull EnterSoundOn;)
+ (PBPlaybackMethod * _Nonnull)EnterSoundOn SWIFT_WARN_UNUSED_RESULT;
/// Initiates on Entering Viewport with Sound Off by Default
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlaybackMethod * _Nonnull EnterSoundOff;)
+ (PBPlaybackMethod * _Nonnull)EnterSoundOff SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


/// <h1>OpenRTB - Protocols</h1>
/// \code
/// | Value | Description       |
/// |-------|-------------------|
/// | 1     | VAST 1.0          |
/// | 2     | VAST 2.0          |
/// | 3     | VAST 3.0          |
/// | 4     | VAST 1.0 Wrapper  |
/// | 5     | VAST 2.0 Wrapper  |
/// | 6     | VAST 3.0 Wrapper  |
/// | 7     | VAST 4.0          |
/// | 8     | VAST 4.0 Wrapper  |
/// | 9     | DAAST 1.0         |
/// | 10    | DAAST 1.0 Wrapper |
///
/// \endcode
SWIFT_CLASS_NAMED("Protocols")
@interface PBProtocols : SingleContainerInt
/// VAST 1.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_1_0;)
+ (PBProtocols * _Nonnull)VAST_1_0 SWIFT_WARN_UNUSED_RESULT;
/// VAST 2.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_2_0;)
+ (PBProtocols * _Nonnull)VAST_2_0 SWIFT_WARN_UNUSED_RESULT;
/// VAST 3.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_3_0;)
+ (PBProtocols * _Nonnull)VAST_3_0 SWIFT_WARN_UNUSED_RESULT;
/// VAST 1.0 Wrapper
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_1_0_Wrapper;)
+ (PBProtocols * _Nonnull)VAST_1_0_Wrapper SWIFT_WARN_UNUSED_RESULT;
/// VAST 2.0 Wrapper
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_2_0_Wrapper;)
+ (PBProtocols * _Nonnull)VAST_2_0_Wrapper SWIFT_WARN_UNUSED_RESULT;
/// VAST 3.0 Wrapper
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_3_0_Wrapper;)
+ (PBProtocols * _Nonnull)VAST_3_0_Wrapper SWIFT_WARN_UNUSED_RESULT;
/// VAST 4.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_4_0;)
+ (PBProtocols * _Nonnull)VAST_4_0 SWIFT_WARN_UNUSED_RESULT;
/// VAST 4.0 Wrapper
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull VAST_4_0_Wrapper;)
+ (PBProtocols * _Nonnull)VAST_4_0_Wrapper SWIFT_WARN_UNUSED_RESULT;
/// DAAST 1.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull DAAST_1_0;)
+ (PBProtocols * _Nonnull)DAAST_1_0 SWIFT_WARN_UNUSED_RESULT;
/// DAAST 1.0 Wrapper
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBProtocols * _Nonnull DAAST_1_0_WRAPPER;)
+ (PBProtocols * _Nonnull)DAAST_1_0_WRAPPER SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


/// <h1>OpenRTB - Start Delay</h1>
/// \code
/// | Value | Description                                      |
/// |-------|--------------------------------------------------|
/// | > 0   | Mid-Roll (value indicates start delay in second) |
/// | 0     | Pre-Roll                                         |
/// | -1    | Generic Mid-Roll                                 |
/// | -2    | Generic Post-Roll                                |
///
/// \endcode
SWIFT_CLASS_NAMED("StartDelay")
@interface PBStartDelay : SingleContainerInt
/// Pre-Roll
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBStartDelay * _Nonnull PreRoll;)
+ (PBStartDelay * _Nonnull)PreRoll SWIFT_WARN_UNUSED_RESULT;
/// Generic Mid-Roll
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBStartDelay * _Nonnull GenericMidRoll;)
+ (PBStartDelay * _Nonnull)GenericMidRoll SWIFT_WARN_UNUSED_RESULT;
/// Generic Post-Roll
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBStartDelay * _Nonnull GenericPostRoll;)
+ (PBStartDelay * _Nonnull)GenericPostRoll SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


/// <h1>OpenRTB - Video Placement Types</h1>
/// \code
/// | Value | Description                  |
/// |-------|------------------------------|
/// | 1     | In-Stream                    |
/// | 2     | In-Banner                    |
/// | 3     | In-Article                   |
/// | 4     | In-Feed                      |
/// | 5     | Interstitial/Slider/Floating |
///
/// \endcode
SWIFT_CLASS_NAMED("Placement")
@interface PBPlacement : SingleContainerInt
/// In-Stream
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlacement * _Nonnull InStream;)
+ (PBPlacement * _Nonnull)InStream SWIFT_WARN_UNUSED_RESULT;
/// In-Banner
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlacement * _Nonnull InBanner;)
+ (PBPlacement * _Nonnull)InBanner SWIFT_WARN_UNUSED_RESULT;
/// In-Article
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlacement * _Nonnull InArticle;)
+ (PBPlacement * _Nonnull)InArticle SWIFT_WARN_UNUSED_RESULT;
/// In-Feed
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlacement * _Nonnull InFeed;)
+ (PBPlacement * _Nonnull)InFeed SWIFT_WARN_UNUSED_RESULT;
/// Interstitial
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlacement * _Nonnull Interstitial;)
+ (PBPlacement * _Nonnull)Interstitial SWIFT_WARN_UNUSED_RESULT;
/// Slider
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlacement * _Nonnull Slider;)
+ (PBPlacement * _Nonnull)Slider SWIFT_WARN_UNUSED_RESULT;
/// Floating
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) PBPlacement * _Nonnull Floating;)
+ (PBPlacement * _Nonnull)Floating SWIFT_WARN_UNUSED_RESULT;
+ (PBPlacement * _Nullable)getPlacementByRawValue:(NSInteger)value SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithIntegerLiteral:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
@end


@class SKAdImpression;

SWIFT_CLASS_NAMED("SkadnEventTracker") SWIFT_AVAILABILITY(ios,introduced=14.5)
@interface PBMSkadnEventTracker : NSObject <PBMEventTrackerProtocol>
- (nonnull instancetype)initWith:(SKAdImpression * _Nonnull)imp OBJC_DESIGNATED_INITIALIZER;
- (void)trackEvent:(PBMTrackingEvent)event;
- (void)trackVideoAdLoaded:(PBMVideoVerificationParameters * _Null_unspecified)parameters;
- (void)trackStartVideoWithDuration:(CGFloat)duration volume:(CGFloat)volume;
- (void)trackVolumeChanged:(CGFloat)playerVolume deviceVolume:(CGFloat)deviceVolume;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("SkadnParametersManager")
@interface PBMSkadnParametersManager : NSObject
+ (SKAdImpression * _Nullable)getSkadnImpressionFor:(PBMORTBBidExtSkadn * _Nonnull)skadnInfo SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=14.5);
+ (NSDictionary<NSString *, id> * _Nullable)getSkadnProductParametersFor:(PBMORTBBidExtSkadn * _Nonnull)skadnInfo SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class CLLocation;

SWIFT_CLASS("_TtC12PrebidMobile9Targeting")
@interface Targeting : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) Targeting * _Nonnull shared;)
+ (Targeting * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(Targeting * _Nonnull)value;
@property (nonatomic, copy) NSString * _Nullable omidPartnerName;
@property (nonatomic, copy) NSString * _Nullable omidPartnerVersion;
/// Indicates user birth year.
@property (nonatomic) NSInteger yearOfBirth;
/// This method set the year of birth value
- (void)setYearOfBirthWithYob:(NSInteger)yob;
- (NSNumber * _Nonnull)getYearOfBirth SWIFT_WARN_UNUSED_RESULT;
/// This method clears year of birth value set by the application developer
- (void)clearYearOfBirth;
/// Indicates the end-user’s gender.
@property (nonatomic) enum PBMGender userGender;
/// String representation of the users gender,
/// where “M” = male, “F” = female, “O” = known to be other (i.e., omitted is unknown)
- (NSString * _Nullable)userGenderDescription SWIFT_WARN_UNUSED_RESULT;
/// Indicates the customer-provided user ID, if different from the Device ID.
@property (nonatomic, copy) NSString * _Nullable userID;
/// Buyer-specific ID for the user as mapped by the exchange for the buyer.
@property (nonatomic, copy) NSString * _Nullable buyerUID;
/// Optional feature to pass bidder data that was set in the
/// exchange’s cookie. The string must be in base85 cookie safe
/// characters and be in any format. Proper JSON encoding must
/// be used to include “escaped” quotation marks.
@property (nonatomic, copy) NSString * _Nullable userCustomData;
/// Placeholder for User Identity Links.
/// The data from this property will be added to usr.ext.eids
@property (nonatomic, copy) NSArray<NSDictionary<NSString *, NSObject *> *> * _Nullable eids;
/// Placeholder for exchange-specific extensions to OpenRTB.
@property (nonatomic, copy) NSDictionary<NSString *, NSObject *> * _Nullable userExt;
/// Objective C analog of subjectToCOPPA
@property (nonatomic, strong) NSNumber * _Nullable coppa;
- (void)setSubjectToGDPR:(NSNumber * _Nullable)newValue;
- (NSNumber * _Nullable)getSubjectToGDPR SWIFT_WARN_UNUSED_RESULT;
/// The consent string for sending the GDPR consent
@property (nonatomic, copy) NSString * _Nullable gdprConsentString;
@property (nonatomic, copy) NSString * _Nullable purposeConsents;
- (NSNumber * _Nullable)getDeviceAccessConsentObjc SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isAllowedAccessDeviceData SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSArray<ExternalUserId *> * _Nonnull externalUserIds;
/// This method allows to save External User Id in the User Defaults
- (void)storeExternalUserId:(ExternalUserId * _Nonnull)externalUserId;
/// This method allows to get All External User Ids from User Defaults
- (NSArray<ExternalUserId *> * _Nullable)fetchStoredExternalUserIds SWIFT_WARN_UNUSED_RESULT;
/// This method allows to get External User Id from User Defaults by passing respective ‘source’ string as param
- (ExternalUserId * _Nullable)fetchStoredExternalUserId:(NSString * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
/// This method allows to remove specific External User Id from User Defaults by passing respective ‘source’ string as param
- (void)removeStoredExternalUserId:(NSString * _Nonnull)source;
/// This method allows to remove all the External User Ids from User Defaults
- (void)removeStoredExternalUserIds;
- (NSArray<NSDictionary *> * _Nullable)getExternalUserIds SWIFT_WARN_UNUSED_RESULT;
/// This is the deep-link URL for the app screen that is displaying the ad. This can be an iOS universal link.
@property (nonatomic, copy) NSString * _Nullable contentUrl;
/// App’s publisher name.
@property (nonatomic, copy) NSString * _Nullable publisherName;
/// ID of publisher app in Apple’s App Store.
@property (nonatomic, copy) NSString * _Nullable sourceapp;
@property (nonatomic, copy) NSString * _Nullable storeURL;
@property (nonatomic, copy) NSString * _Nullable domain;
/// The itunes app id for targeting
@property (nonatomic, copy) NSString * _Nullable itunesID;
/// The application location for targeting
@property (nonatomic, strong) CLLocation * _Nullable location;
- (void)setLocationPrecision:(NSNumber * _Nullable)newValue;
- (NSNumber * _Nullable)getLocationPrecision SWIFT_WARN_UNUSED_RESULT;
/// CLLocationCoordinate2D.
/// See CoreLocation framework documentation.
@property (nonatomic, strong) NSValue * _Nullable coordinate;
- (void)addParam:(NSString * _Nonnull)value withName:(NSString * _Nullable)withName;
- (void)setCustomParams:(NSDictionary<NSString *, NSString *> * _Nullable)params;
- (void)addCustomParam:(NSString * _Nonnull)value withName:(NSString * _Nullable)withName;
- (void)setLatitude:(double)latitude longitude:(double)longitude;
- (void)addBidderToAccessControlList:(NSString * _Nonnull)bidderName;
- (void)removeBidderFromAccessControlList:(NSString * _Nonnull)bidderName;
- (void)clearAccessControlList;
- (NSArray<NSString *> * _Nonnull)getAccessControlList SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull accessControlList;
- (void)addUserDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (void)updateUserDataWithKey:(NSString * _Nonnull)key value:(NSSet<NSString *> * _Nonnull)value;
- (void)removeUserDataFor:(NSString * _Nonnull)key;
- (void)clearUserData;
- (NSDictionary<NSString *, NSArray<NSString *> *> * _Nonnull)getUserData SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSArray<NSString *> *> * _Nonnull userDataDictionary;
- (void)addUserKeyword:(NSString * _Nonnull)newElement;
- (void)addUserKeywords:(NSSet<NSString *> * _Nonnull)newElements;
- (void)removeUserKeyword:(NSString * _Nonnull)element;
- (void)clearUserKeywords;
- (NSArray<NSString *> * _Nonnull)getUserKeywords SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull userKeywords SWIFT_DEPRECATED_MSG("This property is deprecated. Please, use getUserKeywords method instead.");
- (void)addContextDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addAppExtData method instead.");
- (void)updateContextDataWithKey:(NSString * _Nonnull)key value:(NSSet<NSString *> * _Nonnull)value SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use updateAppExtData method instead.");
- (void)removeContextDataFor:(NSString * _Nonnull)key SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use removeAppExtData method instead.");
- (void)clearContextData SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use clearAppExtData method instead.");
- (NSDictionary<NSString *, NSArray<NSString *> *> * _Nonnull)getContextData SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use getAppExtData method instead.");
@property (nonatomic, readonly, copy) NSDictionary<NSString *, NSArray<NSString *> *> * _Nonnull contextDataDictionary SWIFT_DEPRECATED_MSG("This property is deprecated. Please, use getAppExtData method instead.");
- (void)addAppExtDataWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value;
- (void)updateAppExtDataWithKey:(NSString * _Nonnull)key value:(NSSet<NSString *> * _Nonnull)value;
- (void)removeAppExtDataFor:(NSString * _Nonnull)key;
- (void)clearAppExtData;
- (NSDictionary<NSString *, NSArray<NSString *> *> * _Nonnull)getAppExtData SWIFT_WARN_UNUSED_RESULT;
- (void)addContextKeyword:(NSString * _Nonnull)newElement SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addAppKeyword method instead.");
- (void)addContextKeywords:(NSSet<NSString *> * _Nonnull)newElements SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use addAppKeywords method instead.");
- (void)removeContextKeyword:(NSString * _Nonnull)element SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use removeAppKeyword method instead.");
- (void)clearContextKeywords SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use clearAppKeywords method instead.");
- (NSArray<NSString *> * _Nonnull)getContextKeywords SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("This method is deprecated. Please, use getAppKeywords method instead.");
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull contextKeywords SWIFT_DEPRECATED_MSG("This property is deprecated. Please, use getAppKeywords method instead.");
- (void)addAppKeyword:(NSString * _Nonnull)newElement;
- (void)addAppKeywords:(NSSet<NSString *> * _Nonnull)newElements;
- (void)removeAppKeyword:(NSString * _Nonnull)element;
- (void)clearAppKeywords;
- (NSArray<NSString *> * _Nonnull)getAppKeywords SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull parameterDictionary;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






SWIFT_CLASS("_TtC12PrebidMobile5Utils")
@interface Utils : NSObject
/// The class is created as a singleton object & used
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) Utils * _Nonnull shared;)
+ (Utils * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// The initializer that needs to be created only once
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@property (nonatomic, weak) id <NativeAdDelegate> _Nullable delegate;
- (NSString * _Nonnull)convertDictToMoPubKeywordsWithDict:(NSDictionary<NSString *, NSString *> * _Nonnull)dict SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED_MSG("MoPub is not available anymore. Use Prebid MAX adapters instead.");
- (void)findNativeWithAdObject:(id _Nonnull)adObject;
@end


SWIFT_CLASS("_TtC12PrebidMobile11VideoAdUnit") SWIFT_DEPRECATED_MSG("This class is deprecated. Please, use BannerAdUnit with video adFormat.")
@interface VideoAdUnit : AdUnit
@property (nonatomic, strong) VideoParameters * _Nonnull parameters;
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId size:(CGSize)size OBJC_DESIGNATED_INITIALIZER;
- (void)addAdditionalSizeWithSizes:(NSArray<NSValue *> * _Nonnull)sizes;
@end



SWIFT_CLASS_NAMED("VideoControlsConfiguration")
@interface PBMVideoControlsConfiguration : NSObject
/// This property indicates maximum video duration.
/// Obtained from the field ext,prebid.passthrough[].adConfiguration.maxvideoduration.
@property (nonatomic, readonly, strong) NSNumber * _Nullable maxVideoDuration;
/// This property indicates whether the ad should run playback with sound or not.
/// Obtained from the field ext,prebid.passthrough[].adConfiguration.ismuted or set by user.
@property (nonatomic) BOOL isMuted;
/// This property indicates the area which the close button should occupy on the screen.
/// Obtained from the field ext,prebid.passthrough[].adConfiguration.closebuttonarea or set by user.
@property (nonatomic) double closeButtonArea;
/// This property indicates the position of the close button on the screen.
/// Obtained from the field ext,prebid.passthrough[].adConfiguration.closebuttonposition or set by user.
@property (nonatomic) enum PBMPosition closeButtonPosition;
/// This property indicates the area which the skip button should occupy on the screen.
/// Obtained from the field ext,prebid.passthrough[].adConfiguration.skipbuttonarea or set by user.
@property (nonatomic) double skipButtonArea;
/// This property indicates the position of the skip button on the screen.
/// Obtained from the field ext,prebid.passthrough[].adConfiguration.skipbuttonposition or set by user.
@property (nonatomic) enum PBMPosition skipButtonPosition;
/// This property indicates the number of seconds which should be passed from the start of playback until the skip or close button should be shown.
/// Obtained from the field ext,prebid.passthrough[].adConfiguration.skipdelay or set by user.
@property (nonatomic) double skipDelay;
/// This property indicates whether mute controls is visible on the screen.
@property (nonatomic) BOOL isSoundButtonVisible;
/// Use to initialize video controls with server values.
- (void)initializeWith:(PBMORTBAdConfiguration * _Nullable)ortbAdConfiguration;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC12PrebidMobile23VideoInterstitialAdUnit") SWIFT_DEPRECATED_MSG("This class is deprecated. Please, use InterstitialAdUnit with video adFormat.")
@interface VideoInterstitialAdUnit : AdUnit
@property (nonatomic, strong) VideoParameters * _Nonnull parameters;
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithConfigId:(NSString * _Nonnull)configId minWidthPerc:(NSInteger)minWidthPerc minHeightPerc:(NSInteger)minHeightPerc;
@end


/// Describes an <a href="https://www.iab.com/wp-content/uploads/2016/03/OpenRTB-API-Specification-Version-2-5-FINAL.pdf">OpenRTB</a> video object
SWIFT_CLASS("_TtC12PrebidMobile15VideoParameters")
@interface VideoParameters : NSObject
/// List of supported API frameworks for this impression. If an API is not explicitly listed, it is assumed not to be supported.
@property (nonatomic, copy) NSArray<PBApi *> * _Nullable api;
/// Maximum bit rate in Kbps.
@property (nonatomic, strong) SingleContainerInt * _Nullable maxBitrate;
/// Maximum bit rate in Kbps.
@property (nonatomic, strong) SingleContainerInt * _Nullable minBitrate;
/// Maximum video ad duration in seconds.
@property (nonatomic, strong) SingleContainerInt * _Nullable maxDuration;
/// Minimum video ad duration in seconds.
@property (nonatomic, strong) SingleContainerInt * _Nullable minDuration;
/// Content MIME types supported.
/// Prebid Server required property.
/// <h1>Example</h1>
/// <ul>
///   <li>
///     “video/mp4”
///   </li>
///   <li>
///     “video/x-ms-wmv”
///   </li>
/// </ul>
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull mimes;
/// Allowed playback methods. If none specified, assume all are allowed.
@property (nonatomic, copy) NSArray<PBPlaybackMethod *> * _Nullable playbackMethod;
/// Array of supported video bid response protocols.
@property (nonatomic, copy) NSArray<PBProtocols *> * _Nullable protocols;
/// Indicates the start delay in seconds for pre-roll, mid-roll, or post-roll ad placements.
@property (nonatomic, strong) PBStartDelay * _Nullable startDelay;
/// Placement type for the impression.
@property (nonatomic, strong) PBPlacement * _Nullable placement;
/// Indicates if the impression must be linear, nonlinear, etc. If none specified, assume all are allowed.
@property (nonatomic, strong) SingleContainerInt * _Nullable linearity;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable rawAPI;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable rawPlaybackMethod;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nullable rawProtocols;
/// \param mimes supported MIME types
///
- (nonnull instancetype)initWithMimes:(NSArray<NSString *> * _Nonnull)mimes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
